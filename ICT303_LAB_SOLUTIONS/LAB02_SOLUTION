{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZdDimpLi2_nI"
      },
      "source": [
        "# **ICT303 - Advanced Machine Learning and Artificial Intelligence**\n",
        "# **Lab 2 - Linear Neural Networks - Solution and Tutor Guide**\n",
        "\n",
        "The goal of this lab is to learn how to implement, from scratch, the linear neuron (or linear regression model) that we covered in the lecture. We will particularly focus on creating all the building blocks involved in any machine learning model. These should include a class for managing the data, a class for the machine leanring model itself (The Model), a class responsible for training the model (The Trainer) and finally a main program that runs all the necessary tests.\n",
        "\n",
        "While deep learning (and other) programming frameworks already provide ready-to-use implementations, implementing things from scratch is the only way to make sure that you\n",
        "- understand the theoretical concepts,\n",
        "- really know what you are doing,  \n",
        "- can use efficiently these tools,\n",
        "- understand their limitations, and\n",
        "- can extend and build on the top of them.\n",
        "\n",
        "We will first start with a naive approach that implements the analytical solution of the linear regression model and then solve the same problem by formulating it as a Neuron and train it on data.\n",
        "\n",
        "In both cases:\n",
        "- We will use synthetically-generated data and create a class called **SyntheticRegressionData** to manage the data.\n",
        "- Create a class called **LinearRegression** that implements the machine learning model.\n",
        "- Train the model using a class called **Trainer**.\n",
        "\n",
        "This forms the standard standard machine learnin pipeline. This will give you an idea of what is involved in the implementation of machine learning models.\n",
        "\n",
        "This lab is adapted from: https://d2l.ai/chapter_linear-regression/linear-regression-scratch.html"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **1. A short summary of linear regression**\n",
        "\n",
        "Recall, from the lecture, that  regression is the problem of estimating the value of a variable (the output) $y$ as a function of $d$ variables (the input) \\begin{align}\n",
        "  \\textbf{x} = \\begin{bmatrix}\n",
        "           x_{1} \\\\\n",
        "           x_{2} \\\\\n",
        "           \\vdots \\\\\n",
        "           x_{d}\n",
        "         \\end{bmatrix}.\n",
        "\\end{align}\n",
        "\n",
        "In linear regression, this function, which defines the relation between the input $\\textbf{x}$ and the output $y$, is linear. In other words:\n",
        "\\begin{equation}\n",
        "y = w_1x_1 + w_2 x_2 + \\cdots + w_dx_d + b = \\sum_{i=1}^{d}w_ix_i + b,\n",
        "\\end{equation}\n",
        "\n",
        "where:\n",
        "- $b$ is a scalar called *bias*, and\n",
        "- $w_1, \\dots, w_d$ are scalar (real) values called *weights*.\n",
        "\n",
        "The weights $w_1, \\dots, w_d$  and the bias $b$ can be arranged into a single column vector of the form:\n",
        "\\begin{align}\n",
        "  \\textbf{W} = \\begin{bmatrix}\n",
        "           w_{1} \\\\\n",
        "           w_{2} \\\\\n",
        "           \\vdots \\\\\n",
        "           w_{d} \\\\\n",
        "           b\n",
        "         \\end{bmatrix}.\n",
        "\\end{align}\n",
        "\n",
        "This way, the linear regression equation above can be written using dot products between vectors:\n",
        "$$\n",
        "    y =  \\begin{bmatrix}\n",
        "            w_{1}, w_{2}, \\dots, w_{d}, b\n",
        "        \\end{bmatrix}\n",
        "       \\begin{bmatrix}\n",
        "           x_{1} \\\\\n",
        "           x_{2} \\\\\n",
        "           \\vdots \\\\\n",
        "           x_{d} \\\\\n",
        "           1\n",
        "         \\end{bmatrix}.\n",
        "$$\n",
        "\n",
        "which can be written in a compact way as:\n",
        "$$\n",
        "y = \\textbf{W}^{\\top} \\textbf{X} = \\langle \\textbf{W}, \\textbf{X} \\rangle.\n",
        "$$\n",
        "\n",
        "Note that here,\n",
        "$$\n",
        "  \\textbf{X} =  \\begin{bmatrix}\n",
        "           x_{1} \\\\\n",
        "           x_{2} \\\\\n",
        "           \\vdots \\\\\n",
        "           x_{d} \\\\\n",
        "           1\n",
        "         \\end{bmatrix}.\n",
        "$$\n",
        "\n",
        "\n",
        "$\\textbf{W}$, which includes both the weights and the bias  and $b$, are called **parameters** of the model. The goal of the **training** process is to find the right values of these weights from some training data.\n",
        "\n",
        "### **Example 1 - House prices** ###\n",
        "\n",
        "House prices are affected by many factors. In this example, let's assume that they are affected by 3 factors (in this case $d = 3$):\n",
        "- The surface of the livable area. Let's denote it by $x_1$,\n",
        "- The land area. Let's denote it by $x_2$.\n",
        "- The distance of the house to the train startion. Let's denote it by $x_3\".\n",
        "\n",
        "Let's denote by $y$ the house price.\n",
        "\n",
        "We would like to develop a linear model that predicts the house price, i.e., the value of $y$ from these 3 parameters. Then, we can write:\n",
        "\n",
        "$$\n",
        "    y =  \\begin{bmatrix}\n",
        "            w_{1}, w_{2}, w_{3}, b\n",
        "        \\end{bmatrix}\n",
        "       \\begin{bmatrix}\n",
        "           x_{1} \\\\\n",
        "           x_{2} \\\\\n",
        "           x_{3} \\\\\n",
        "           1\n",
        "         \\end{bmatrix} = w_1 x_1 +  w_2 x_2 + w_3 x_3 + b.\n",
        "$$\n",
        "\n",
        "In this formulation, we know the form of the relation between these parameters and the house price. Or, if we want to be correct, we assumed that the relation between the three factors and the house price is linear.  The problem, however, is that we do not know the exact values of the parameters $w_1, w_2, w_3$ and  $b$.\n",
        "\n",
        "The goal of the training phase is to actually determine the correct values of $w_1, w_2, w_3$ and  $b$ from examples. In other words, we will go out, collect data about each house (the surface of their livable area, the total area of the land, and their distance to the train station) as well as their historical sale prices. Then, we use this data to estimate the values of $w_1, w_2, w_3$ and  $b$. When someone wants to sell their house, they only need to enter the surface of the livable area of the house, the total land area, and its distance to the train station. The model will then return the estimated sale price.\n",
        "\n",
        "### **The training process** ###\n",
        "\n",
        "The first step inthe t raining process is to collect training data. In the example above, the training data consists of a number $n$ of houses. For each house, we need to collect (1) the area of its liveable surface, its total area and its distance to the station, and (2) the corresponding sale price. The latter is called grundtruth.\n",
        "\n",
        "In the general case, we need to collect:\n",
        "-  $n$ input samples $\\textbf{x}^1, \\dots, \\textbf{x}^n$. Each sample $\\textbf{x}^i$ is a vector of the form:\n",
        "  $$\n",
        "    \\textbf{x}^i = \\begin{bmatrix}\n",
        "           x^{i}_{1} \\\\\n",
        "           x^{i}_{2} \\\\\n",
        "           \\vdots \\\\\n",
        "           x^{i}_{d} \\\\\n",
        "           1\n",
        "         \\end{bmatrix}.\n",
        "  $$\n",
        "\n",
        "Note that in the case of houses the $ d = 3 $ and $x^{i}{1}$  corresponds to the areaof the liveable space of the $i-$th house, $x^{i}_{2}$ corresponds to the total area of the $i-$th house and $x^{i}_{3}$ corresponds to the distance of the $i-$th house from the train station.\n",
        "\n",
        "- For all the data we collected, we stack them into a single matrix $\\textbf{X}$ of the form:\n",
        "  $$\n",
        "    \\textbf{X} =\n",
        "      \\begin{bmatrix}\n",
        "           x^{1}_{1} \\cdots x^{i}_{1} \\cdots x^{n}_{1} \\\\\n",
        "           x^{1}_{2} \\cdots x^{i}_{1} \\cdots x^{n}_{2} \\\\\n",
        "           \\vdots \\\\\n",
        "            x^{1}_{d} \\cdots x^{i}_{d} \\cdots x^{n}_{d}\\\\\n",
        "            1 \\cdots 1 \\cdots 1\n",
        "         \\end{bmatrix}.\n",
        "  $$\n",
        "\n",
        "\n",
        "- For each sample $\\textbf{x}^i$, we have its desired output $y^i$. In our example, $y^i$ is the historical sale price of the $i-$th house.  Let's put all the $y^i$'s into one column vector:\n",
        " $$\n",
        " \\textbf{y} =  \n",
        "  \\begin{bmatrix}\n",
        "      y_1 \\\\\n",
        "      y_2\\\\\n",
        "      \\vdots \\\\\n",
        "      y_n\n",
        "  \\end{bmatrix}\n",
        " $$\n",
        "\n",
        "\n",
        "Then, we can write:\n",
        "$$\n",
        "\\begin{bmatrix}\n",
        "      y_1 \\\\\n",
        "      y_2\\\\\n",
        "      \\vdots \\\\\n",
        "      y_n\n",
        "  \\end{bmatrix} = \\begin{bmatrix}\n",
        "            w_{1}, w_{2}, \\dots, w_{d}, b\n",
        "        \\end{bmatrix}  \\begin{bmatrix}\n",
        "           x^{1}_{1} \\cdots x^{i}_{1} \\cdots x^{n}_{1} \\\\\n",
        "           x^{1}_{2} \\cdots x^{i}_{1} \\cdots x^{n}_{2} \\\\\n",
        "           \\vdots \\\\\n",
        "            x^{1}_{d} \\cdots x^{i}_{d} \\cdots x^{n}_{d}\\\\\n",
        "            1 \\cdots 1 \\cdots 1\n",
        "         \\end{bmatrix}.\n",
        "$$\n",
        "\n",
        "which can be written in short as:\n",
        "$$\n",
        "   \\textbf{y} = \\textbf{W}^\\top \\textbf{X}.\n",
        "$$\n",
        "\n",
        "Our goal is to find the values of $\\textbf{W}$. There are two ways of solving this problem:\n",
        "- Analytical (closed-form) solution, and\n",
        "- Iteratvie optimization-based solution.\n",
        "\n",
        "The former is only possible for simple problems such as the linear regression problem. The latter, on the other hand, is iterative but applicable to every machine learning problem.\n",
        "\n",
        "This week, we will look at the first solution. First, we will see how we can generate some synthetic/simulated data (Section 2), which we will use to validate the solution. This will show you how to implement the class the handles data. Second, will create the model class and the trainer (Section 2) and implement all the necessary methods.\n",
        "\n"
      ],
      "metadata": {
        "id": "RNeECLiQOUgc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **2. Generating synthetic data**\n",
        "\n",
        "Machine learning is all about data. The data usually comes from practical problems. However, when developing machine learning models, we usually rely on synthetic data because:\n",
        "- They are easy to generate, by just writing some code\n",
        "- We know the input, the output, and  the process that generated them. Thus, we can easily evaluate whether our machine learning model works the way it is intended to.\n",
        "\n",
        "Note, however, that synthetic data should not replace real data. Once a machine learning model has been developed and tested, it should be trained and testedt/validated on real data.\n",
        "\n",
        "In the case of linear regression, we will need training data in the form of pairs $(\\textbf{x}^i, y^i)$ where $\\textbf{x}^i$ is an input and $y^i$ is its corresponding output (called also label). In this example, let's start with a simple case where $d=1$ and thus $\\textbf{x}^i$ is a scalar (i.e., just one value).\n",
        "\n",
        "Let's simulate $1000$ data points (i.e., $n=1000$). We generate each $\\textbf{x}^i$ randomly from a normal (Gaussian) distribution with mean $0$ and standard deviation $0.01$ (any other values are also fine). Then, its corresponding output $y^i$ is  given by:\n",
        "\\begin{equation}\n",
        "      y^i = \\textbf{w}^\\top \\textbf{x}^i + b + \\varepsilon.\n",
        "\\end{equation}\n",
        "\n",
        "Here, $\\varepsilon$ is an additive **noise** that corrupts the data generation process. (Think of a device that captures data where, during the capture process, the data gets corrupted with some noise.)\n",
        "\n",
        "In this example, let's set\n",
        "$$\\textbf{w} = \\begin{bmatrix}\n",
        "     2 \\\\\n",
        "     4.2\n",
        "     \\end{bmatrix}\n",
        "$$\n",
        "\n",
        "To generate this data, we will created  a class called **SyntheticRegressionData** whose responsibiity is to generate some synthetic data following the description above.\n",
        "\n",
        "In this exercise, you are required to implement the method **generate**, which takes as input the mean mu, the standard deviation sigma, the noise value, and the number of training samples we want to generate. The generated data should be saved into variables X and y which should be members of the same class."
      ],
      "metadata": {
        "id": "9_W5wADsWi2z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import torch\n",
        "\n",
        "class SyntheticRegressionData:\n",
        "\n",
        "  # Implement the constructor of the class\n",
        "  # We can assume that the constructor also generates some initial data\n",
        "  def __init__(self): #, w, b, mu = 0.0, sigma = 1.0, noise=0.01, num_train=1000):\n",
        "    # Generate num_train random samples following Gaussian distribution\n",
        "    # of mean mu and standard deviation sigma.\n",
        "    # [self.X, self.y ] = self.generate(mu, sigma, noise, num_train)\n",
        "    self.n = 0;\n",
        "    self.w = []\n",
        "    self.b = []\n",
        "\n",
        "  def generate(self, w, b, mu = 0.0, sigma = 1.0, noise=0.01, num_train=1000):\n",
        "\n",
        "    self.n = num_train   # no. of trianing samples\n",
        "    self.w = w\n",
        "    self.b = b\n",
        "\n",
        "    self.mu = mu\n",
        "    self.sigma = sigma\n",
        "\n",
        "    # Generate num_train random samples following Gaussian distribution\n",
        "    # of mean mu and standard deviation sigma.\n",
        "    self.X = mu +  torch.randn(len(self.w), self.n) * sigma\n",
        "\n",
        "    # Let's corrupt the data with some random noise\n",
        "    noise = torch.randn(1, self.n) * noise\n",
        "\n",
        "    # For each sample in X, generate its corresponding y value\n",
        "    # using the equation above.\n",
        "    # Note below that the function reshape has parameters (-1, 1).\n",
        "    # This means that it will reshape the vector w into a 2D matrix where:\n",
        "    # - the 2nd dimension has length 1\n",
        "    # - the length of the first dimension will be autmatically set.\n",
        "    #\n",
        "    self.y = torch.matmul(w.reshape((-1, 1)), self.X) + b + noise\n",
        "    self.y = torch.transpose(self.y, 0, 1)\n",
        "\n",
        "    return self.X, self.y"
      ],
      "metadata": {
        "id": "ot8TMZN-LCXv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now let's test this class by generating $n=1000$ data and plot them."
      ],
      "metadata": {
        "id": "85bADCVOORG_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "w = torch.tensor([2.0])\n",
        "b = 4.2\n",
        "\n",
        "noise = 1.2\n",
        "mu = 0\n",
        "sigma = 12\n",
        "\n",
        "num_train = 1000  #I want to generate 1000 random houses\n",
        "\n",
        "data_generator = SyntheticRegressionData()\n",
        "\n",
        "X, y = data_generator.generate(w, b, mu=mu, sigma = sigma, noise = noise, num_train = num_train)\n",
        "\n",
        "# Let's teh shape of X\n",
        "print(X.shape)\n",
        "print(y.shape)\n"
      ],
      "metadata": {
        "id": "HGLMQr_TOajv",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "05e5dee1-3082-4350-e306-f8377fc190dc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "torch.Size([1, 1000])\n",
            "torch.Size([1000, 1])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Often, we need to **plot** or **visualize** the data instead of printing individual numerical values. Python offers a range of tools for plotting data and graphs. For instance, in the simple example above, we can use the **plot** function from **matloplib**:"
      ],
      "metadata": {
        "id": "DGYXonscQgYv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Plot as points in green\n",
        "plt.plot(X, torch.transpose(y, 0, 1), 'r.')\n",
        "plt.xlabel('X')\n",
        "plt.ylabel('y')\n",
        "plt.title('Random data')"
      ],
      "metadata": {
        "id": "sTuNDt5ETm4-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "outputId": "70859818-48ac-4d0e-9b4b-9f859f0e75e7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Random data')"
            ]
          },
          "metadata": {},
          "execution_count": 3
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Questions:**\n",
        "\n",
        "\n",
        "1. Play with the different parameters of the data generator and observe the plot that is generated.\n",
        "\n"
      ],
      "metadata": {
        "id": "HchH-_NYWFIA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Instantiate data generator\n",
        "data_gen = SyntheticRegressionData()\n",
        "\n",
        "# Parameters to test\n",
        "params_list = [\n",
        "    {\"w\": torch.tensor([2.0]), \"b\": 1.0, \"mu\": 0.0, \"sigma\": 1.0, \"noise\": 0.01},\n",
        "    {\"w\": torch.tensor([2.0]), \"b\": 1.0, \"mu\": 0.0, \"sigma\": 0.5, \"noise\": 0.01},\n",
        "    {\"w\": torch.tensor([2.0]), \"b\": 1.0, \"mu\": 0.0, \"sigma\": 1.0, \"noise\": 0.2},\n",
        "    {\"w\": torch.tensor([0.5]), \"b\": 1.0, \"mu\": 0.0, \"sigma\": 1.0, \"noise\": 0.01},\n",
        "    {\"w\": torch.tensor([2.0]), \"b\": -1.0, \"mu\": 0.0, \"sigma\": 1.0, \"noise\": 0.01},\n",
        "]\n",
        "\n",
        "# Plotting\n",
        "plt.figure(figsize=(15, 10))\n",
        "for i, params in enumerate(params_list):\n",
        "    X, y = data_gen.generate(**params)\n",
        "    plt.subplot(2, 3, i+1)\n",
        "    plt.plot(X[0], y[:, 0], 'r.')\n",
        "    plt.title(f\"w={params['w'].item()}, b={params['b']}, μ={params['mu']}, σ={params['sigma']}, noise={params['noise']}\")\n",
        "    plt.xlabel(\"X\")\n",
        "    plt.ylabel(\"y\")\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "jYtr2BJ0Wgaw",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 749
        },
        "outputId": "2aa1689c-3c5b-45e7-83b9-b5a6e1f5ae0b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 5 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABdEAAAPeCAYAAADj01PlAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQABAABJREFUeJzs3Xl8VOXZ//HvzCABZFcoaEIEElfEBaICogFRsOBjbQnaqgUMiy2Iiuyg/qyyJopKFQlOgcelilarYN2quCIScK9bUAMcXKBqE0EbNTm/P+5nkkwyW5KZM5OZz/v1mleYM/fMXAkDV+7r3Oe6XbZt2wIAAAAAAAAAAPW44x0AAAAAAAAAAACJiiI6AAAAAAAAAABBUEQHAAAAAAAAACAIiugAAAAAAAAAAARBER0AAAAAAAAAgCAoogMAAAAAAAAAEARFdAAAAAAAAAAAgqCIDgAAAAAAAABAEBTRAQAAAAAAAAAIgiI6korL5dLUqVPjHQbQLLzwwgtyuVx64YUX4h0KgBRCrgYit3btWrlcLpWWlsY7FAApjvwNRI65dnKiiI5G+f7773XHHXfonHPOUffu3dWuXTuddNJJWrlypSorKyN+nccff1wnn3yyWrVqpR49euj666/Xzz//HMPIm+aLL77QnDlzNGTIELVr165R/ynu2bNHY8aMUceOHdW+fXudf/75+vTTT2MTcBR5vV4dc8wxatWqlbKzs7VixYqIn1tRUaHZs2frsMMOU+vWrXXqqafq2WefjWG0TffMM88oPz9fffr0kcfj0RFHHNHg12hun+9E8sEHH2jEiBFq27atOnfurEsvvVT79u2L+PmR/Oyj8e8ZSGTkanJ1sudqSdq8ebNOP/10tWnTRt26ddO0adO0f//+iJ7rcrkC3pYsWRLjqJNDU372UmSf148++khXX321Bg4cqFatWnFCASmB/E3+Tvb8zVw7vho71/76669VUFCgM844Q126dFHHjh112mmn6cEHH3Qg6gRhA43w7rvv2i6Xyx42bJi9bNky+6677rIvuOACW5L9+9//PqLX+Mc//mG7XC57yJAhdlFRkX3FFVfYbrfbvvzyyxsdlyR7ypQpjX5+OJs2bbIl2dnZ2faAAQNsSfamTZsifv53331nZ2dn2127drWXLl1q33LLLXZGRoadnp5u//vf/45Z3E1111132ZLs3/zmN3ZRUZF96aWX2pLsJUuWRPT8iy66yG7RooU9Y8YMe9WqVfaAAQPsFi1a2C+//HKMI2+8sWPH2q1atbIHDhxop6en25mZmQ16fiw+39FWWVlp//DDD3ZlZWW8Q/Gze/du+9BDD7V79+5t33bbbfbChQvtTp062SeccIJdUVER9vmR/uyb+u8ZSHTkanJ1sufqN998027VqpV90kkn2StXrrTnz59vp6Wl2SNGjIjo+ZLss88+277nnnv8bu+9916MI4/czz//bP/www92VVVVvEPx09SffaSf1zVr1thut9vu06ePfeKJJ9qS7M8++ywG3xGQOMjf5O9kz9/MteOnKXPtDRs22AcddJB9/vnn27feeqv95z//2R4yZIgtyb7uuusc+g7iiyI6GmXfvn0BJxjjx4+3JdklJSVhX+PYY4+1TzjhBPunn36qPjZ//nzb5XLZH3zwQaPiinViLy8vt7/++mvbtm37oYceanBiX7p0qS3J3rp1a/WxDz74wPZ4PPbcuXOjHW5UfP/99/Yhhxxijxw50u/4xRdfbB988MH2N998E/L5r7/+ui3JLigoqD72ww8/2L1797YHDBgQk5ijYc+ePfaPP/5o27Ztjxw5ssGJPRaf71Txhz/8wW7durW9c+fO6mPPPvusLcletWpV2OdH+rNv6r9nINGRq8nVyZ6rzz33XLt79+52WVlZ9bHVq1fbkuynn3467PNj/VlMZk352Tfk8/r111/b5eXltm3bdkFBAUV0pATyN/k72fM3c+34acpc+9NPP7VLS0v9jlVVVdlDhw6109LS7P3798ck5kRCO5ck8c4778jlcunxxx+vPrZ9+3a5XC6dfPLJfmPPPfdcnXrqqU16v0MPPVTHHXdcveMXXHCBJHN5SCjvv/++3n//fU2aNEktWrSoPv7HP/5Rtm3r4YcfblJ89913n4466ii1atVK/fr100svvdSk1/Np166dOnfu3OjnP/zww8rJyVFOTk71saOPPlpnnXWW1q9f36jXzM3NVW5ubr3j48aNa9RlUXVt2rRJX3/9tf74xz/6HZ8yZYoOHDigJ554IuTzH374YXk8Hk2aNKn6WKtWrZSfn6/XXntNu3fvblRcr7zyioYOHar27dsHvBS7qZf6HnbYYTrooIMa9dxYfb59fQj//ve/q0+fPkpLS9Nxxx2np556qt7YN998U+eee67at2+vtm3b6qyzztKWLVv8xgTq01ZSUqLf/OY36tatm1q1aqX09HRddNFFKisr83vuvffeq379+ql169bq3LmzLrrookb/Xdb1t7/9TaNGjVKPHj2qjw0bNkxHHnlk2H8nDfnZN/XfM9BQ5Gp/5GpydVNydXl5uZ599lldcsklat++ffXx3//+92rbtm2D/q5++OEH/fe//210LD6lpaVyuVwqLCxUUVGRevfurbS0NOXk5Ki4uLje+Oeff16DBw/WwQcfrI4dO+r888+v9+8yUE/0bdu2afjw4Tr00EPVunVr9ezZU5dddpnf86qqqnTrrbfquOOOU6tWrfSLX/xCkydP1rffftvk77OpP/uGfF47d+6sdu3aNTlmoCnI3/7I3+Rv5tqpOdfu2bOnMjMz/Y65XC796le/UkVFRbNondRULcIPQXPQp08fdezYUS+99JL+53/+R5L08ssvy+126+2331Z5ebnat2+vqqoqbd682e8/2f3790c0cTjooIPUoUOHkGO+/PJLSSbxh/Lmm29Kkvr37+93/LDDDlN6enr1443x4osv6sEHH9S0adOUlpamO++8UyNGjNDWrVvVp08fSdJPP/1U7z+qYDp37iy3u+nnm6qqqvTOO+/Um+RI0imnnKJnnnlG3333XUwnCt9++21EffTatGmjNm3aSAr+d9WvXz+53W69+eabuuSSS4K+1ptvvqkjjzzSb5Ilme9Zkt566y1lZGQ06Pv44IMPNGzYMLVu3VpXXXWVOnfurHvvvVfbt2/XUUcdpaOPPro6/mh+viMVy8/3K6+8okceeUR//OMf1a5dO91+++36zW9+o127dumQQw6RJP3rX//S4MGD1b59e82aNUsHHXSQVq1apdzcXL344otBf7H/8ccfNXz4cFVUVOiKK65Qt27dtGfPHm3cuFH/+c9/qn8+Cxcu1LXXXqsxY8ZowoQJ2rdvn1asWKEzzjhDb775pjp27CjJ9HP8/vvvw35PHo9HnTp1kmT6GO7du7fez04yn5l//OMfIV8rlj97oKnI1TXI1cGRq4Or/fl+99139fPPP9f7nlu2bKkTTzwx4s/n2rVrdeedd8q2bR1zzDFasGCBfve73zXoe63r/vvv13fffafJkyfL5XJp2bJl+vWvf61PP/20umjwz3/+U+eee6569eql//f//p9++OEHrVixQoMGDdIbb7wRtDizd+9enXPOOerSpYvmzJmjjh07qrS0VI888ojfuMmTJ2vt2rUaP368pk2bps8++0x//vOf9eabb+rVV1+tjiMeP/umfl4Bp5G/a5C/gyN/B8dcOznm2sFE+n9TUojjKnhE2ciRI+1TTjml+v6vf/1r+9e//rXt8XjsJ5980rZt237jjTdsSfZjjz1WPW7s2LG2pLC3M888M+T7V1RU2Mcee6zds2dPv8tqAvFdjrlr1656j+Xk5NinnXZaA77zGr5Yt23bVn1s586ddqtWrewLLrig+piv31okt2CXjDb0ErN9+/bZkuw//elP9R674447bEn2hx9+2KDv17Zt+8wzzwz4dzN27Nh6l0VlZmZG9D1ff/311c+ZMmWK7fF4Ar53ly5d7IsuuihkfMcdd5w9dOjQesf/9a9/2ZLsu+66K+z3WNe4ceNsSfaWLVuqjx04cMDu3bu33a9fP7+x0fh8N/QSs1h+vlu2bGnv2LGj+tjbb79tS7JXrFhRfexXv/qV3bJlS/uTTz6pPvb555/b7dq1s88444zqY75/B77P8JtvvmlLsh966KGgMZSWltoej8deuHCh3/F3333XbtGihd/x66+/PqKffe2fbXFxsS3J/t///d967z1z5kxbkv3f//43aHyN/dnTzgVOIVeTq2sjVxuN+Xz7/m5feumleu+dl5dnd+vWLWyMAwcOtG+99Vb7scces1euXGn36dPHlmTfeeedDf5+bdu2P/vsM1uSfcghh/hdgv/YY4/ZkuwNGzZUHzvxxBPtrl27VrcusG2T091ut1/P4zVr1vh9xh999FFbkl1cXBw0jpdfftmWZN93331+x5966ql6x+Pxs2/s55V2Logn8jf5uzbyt8Fc20iVuXYgX3/9td21a1d78ODBDXpec8VK9CQyePBgLViwQAcOHNDBBx+sV155RYsWLdLOnTv18ssva8SIEXr55Zflcrl0+umnVz9v1qxZEa328J29Cmbq1Kl6//339cQTT/hdVhPIDz/8IElKS0ur91irVq1UXl4eNp5gBgwYoH79+lXf79Gjh84//3xt2LBBlZWV8ng8OuGEEyLesbpbt26NjqW2cN9z7TGxct9990X0Hr169ar+8w8//KCWLVsGHNeqVauwr/fDDz9E/XvetGmTTjvtNL+zvG3atNHEiRM1Z84cffLJJ+rdu7ek6H2+GyKWn+9hw4ZVf2+S1LdvX7Vv37760qnKyko988wz+tWvfuX399i9e3f97ne/0+rVq6tXy9TlO/v99NNP65e//GX1CoPaHnnkEVVVVWnMmDH697//XX28W7duys7O1qZNmzRv3jxJ5rLu2v/XBNO6devqP0f67yTQ45E8vyk/eyAayNUGuTo4cnVwtT/f4f6uIon51Vdf9bt/2WWXqV+/fpo3b57GjRvnl58a4sILL/SLdfDgwZJUnau/+OILvfXWW5o1a5Zf64K+ffvq7LPPDrkSzLcCbePGjTrhhBMCXg7/0EMPqUOHDjr77LP9cnW/fv3Utm1bbdq0qXq1fTx+9k39vALxQP42yN/Bkb+DY66dHHPtuqqqqnTxxRfrP//5j1asWBHRc5o7iuhJZPDgwfr555/12muvKSMjQ3v37tXgwYP1r3/9Sy+//LIkc9nZscce6/cL+7HHHqtjjz22Se9dUFCg1atX68Ybb9Qvf/nLsON9/5ArKirqPfbf//630ZMWScrOzq537Mgjj9T333+vffv2qVu3burUqZOGDRvW6PdojHDfc+0xsTJo0KAGP6d169b68ccfAz4Wyd9V69ato/49f/755wF70x1zzDGSzCTVl/yi8fluqFh+vmv3LvPp1KlTdY/Tffv26fvvv9dRRx1Vb9wxxxyjqqoq7d69O2CfxZ49e2r69Om65ZZbdN9992nw4MH6n//5H11yySXVSb+kpES2bQf8dybJbzLfq1cvv18uItHUfyex/NkD0UCuNsjVwZGrIxOLz2fLli01depUXX755dq+fXtEk9NA6uZqX/HAl6t37twpSUFz9dNPP11dqKvrzDPP1G9+8xvdcMMNWr58uXJzc/WrX/1Kv/vd76onvSUlJSorK1PXrl0Dxrd3797qP8fjZ9/UzysQD+Rvg/wdHPnbGcy1jXjMteu64oor9NRTT+l///d/dcIJJzQoluaKInoS6d+/v1q1aqWXXnpJPXr0UNeuXXXkkUdq8ODBuvPOO1VRUaGXX365ekMSn7KysojOULZs2TLgRh9r167V7Nmzdfnll2vBggURxdq9e3dJZiVO3R5dX3zxRXUPr1j58ccf9c0330Q0tkuXLvJ4PE1+z86dOystLU1ffPFFvcd8xw477LAmv4+Pbdv1ju3bty+iPm1t27ZV27ZtJZm/q8rKSu3du9dvMvbjjz/q66+/Dhtz9+7dtWfPnnrHm/I9ezyegN+H79hPP/1Ufaypn+/GiOXnO9hnMdDfd2PcfPPNGjdunB577DE988wzmjZtmhYvXqwtW7YoPT1dVVVVcrlcevLJJwPG4vvcSKZH3v79+8O+p8fjUZcuXST5/+zq+uKLL6r/HQUT7/9bgHDI1ZEjV4eW6rk6XL5o7N+T77Me6WcvkFjmapfLpYcfflhbtmzRhg0b9PTTT+uyyy7TzTffrC1btqht27aqqqpS165ddd999wV8DV/OleLzs2/q5xWIB/J35MjfoaV6/m4q5tpGPObatd1www268847tWTJEl166aURPScZUERPIi1bttQpp5yil19+WT169Ki+dHTw4MGqqKjQfffdp6+++kpnnHGG3/OuvPJKrVu3Luzrn3nmmX47C0vSY489pgkTJujXv/617rjjjohjPfHEEyVJ27Zt8/tP7vPPP5dlWX6bsTRUSUlJvWMff/yx2rRpU/2fx+bNmzVkyJCIXu+zzz6Lys7bbrdbxx9/vLZt21bvsddff129evVq9EYn3333Xb1jX331Vb1jOTk51aufQrn++uv1//7f/5Pk/3dVe+XDtm3bVFVVVf14MCeeeKI2bdpU77Km119/3e/1G6J379768MMP6x33HevZs2f1saZ8vhsrlp/vcLp06aI2bdroo48+qvfYhx9+KLfbHXZzmeOPP17HH3+8FixYoM2bN2vQoEG66667dNNNN6l3796ybVs9e/bUkUceGfJ1CgsLdcMNN4SNOTMzs3qH98MPP1xdunQJ+O9k69atEX3epPj87IFIkKsNcrVBrjYa8/nu06ePWrRooW3btmnMmDHVY3788Ue99dZbfscawnfJdu1Cc7RlZmZKUtBcfeihhwZchV7baaedptNOO00LFy7U/fffr4svvlgPPPCAJkyYoN69e+uf//ynBg0aFHZFWTx+9k39vALxQP42yN8G+dtgrl0jFebaPnfccYf+3//7f7rqqqs0e/bsiJ6TLCiiJ5nBgwfrlltu0SeffKJrrrlGktkh95hjjtHSpUurx9TW2D5WL730ki666CKdccYZuu+++4Luqv3TTz/pk08+UYcOHarPfB133HE6+uijVVRUpMmTJ1efZVu5cqVcLpdGjx7dsG+8ltdee01vvPGGTj75ZEnS7t279dhjj2nEiBHV7+NEn7Zdu3bp+++/19FHH119bPTo0ZozZ462bdtWvSPyRx99pOeff14zZsxo1PtI0vvvv6+vvvpKv/jFLySZs+CvvPJK9Q7SPo3p0zZ06FB17txZK1eu9EvsK1euVJs2bTRy5MjqY//+97/173//Wz169Kju8TV69GgVFhaqqKio+nusqKjQmjVrdOqppzZ4t3BJOu+887RkyRK98sor1Zda79+/X0VFRerdu7ffzzzWfdqc/nyH4/F4dM455+ixxx5TaWlp9S+lX331le6//36dfvrpAXu0SVJ5ebnatGnj12fx+OOPl9vtrr7k69e//rXmzp2rG264Qffee69cLlf1WNu29c0331R/7hrTp02SfvOb32jdunXavXt39efjueee08cff6yrr766elyi/eyBSJGrydUSubqpubpDhw4aNmyY7r33Xl177bXVxZF77rlH+/fvV15eXvXY77//Xrt27dKhhx6qQw89VJL5+dctlH/33Xe69dZbdeihh/r1/I227t2768QTT9S6des0d+7c6j7n7733np555pmQP4tvv/1WHTt29Mu/vkmvL1ePGTNGd955p2688UYtWrTI7/k///yz9u/fX/2e8fjZN+TzCiQS8jf5WyJ/M9dO3bm2JD344IOaNm2aLr74Yt1yyy1h3z/pxGc/U8TKU089Vb0L7/bt26uPT5482ZZkH3HEEVF5n9LSUrtDhw5269at7TvuuMO+5557/G5vv/129djPPvvMlmSPHTvW7zU2bNhgu1wue+jQoXZRUZE9bdo02+122xMnTvQbF+z5gUiy+/TpYx966KH2n/70J3vp0qV2Zmam3apVK7+YmuLGG2+0b7zxRvuiiy6yJdmXXXZZ9bHazjzzTLvuP7Hy8nK7d+/edteuXe1ly5bZy5cvtzMyMuzDDjvM3rt3b9jnB3LmmWfarVu3to855hh7+fLldmFhoX3kkUfaHTp0sFu0aGEvXbrUrqysbNL37NvRfPTo0fbq1avt3//+97akertG+3aIrruLel5ent2iRQt75syZ9qpVq+yBAwfaLVq0sF988cWInl/X119/baenp9vt27e3FyxYYN9yyy32CSecYLvdbvuxxx5r0vfq8/bbb1f/vR511FF2x44dq+8//vjj1eOc/nxPmTKl3vHMzEy/57/33nv2wQcfbB9++OH2woUL7aVLl9q9evWy09LS/HZZr7tj+KOPPmoffvjh9lVXXWXfeeed9u23327n5OTYBx10kP3aa69VP2/x4sW2JHvgwIH2smXL7JUrV9qzZs2ys7Oz7YKCgrDfRzi7du2yDznkELt379727bffbi9atMju1KmTffzxx/vtFt7Un71tR/7vGYgmcjW5mlwdnVy9fft2Oy0tzT7ppJPslStX2vPnz7dbtWpln3POOX7jfPnu+uuv9/s+TjjhBHvBggV2UVGRfcMNN9iZmZm2y+Wy77333rDPD8T37yBQLqz7/GeffdZu0aKFffTRR9sFBQX2n/70J7tLly52p06d7E8//bR63Jo1a2xJ9meffWbbtm0vX77czs7OtmfNmmWvWrXKLiwstI866ii7ffv2fs/z/X9y7rnn2suXL7f//Oc/21deeaV92GGH2Q899FCYn2x4TfnZ23bkn9f//Oc/1f92R4wYYUuyr7nmGvvGG2+0V6xY0eTvA2gI8jf5m/zNXDuV59qvv/663bJlS7tLly72X/7yl3r/N33yySdNji/RUURPMuXl5bbH47HbtWtn//zzz9XH7733XluSfemll0blfXz/IQS71f5FOdR/XI8++qh94okn2mlpaXZ6erq9YMEC+8cff/Qb8+6779qS7Dlz5oSNy/cf37333mtnZ2dX/3IfLlE0RKjvu7ZgiXn37t326NGj7fbt29tt27a1R40aZZeUlNQb169fP7tbt25h4znzzDPtM888077uuuvsQw45xG7Xrp09efJk+9VXX7UPOeQQ+9hjj21yYrdt2y4qKrKPOuoou2XLlnbv3r3t5cuX21VVVX5jgiXmH374wZ4xY4bdrVs3Oy0tzc7JybGfeuqpeu9xzTXX2C6Xy/7ggw/CxlNaWmqPGTPG7tixo92qVSv7lFNOsZ944okmfY+1+SatgW61P8vx+HzXVTex27Ztv/HGG/bw4cPttm3b2m3atLGHDBlib9682W9M3cT+6aef2pdddpndu3dvu1WrVnbnzp3tIUOG2P/85z/rveff/vY3+/TTT7cPPvhg++CDD7aPPvpoe8qUKfZHH30U9vuIxHvvvWefc845dps2beyOHTvaF198sf3ll1/6jWnqz962I//3DEQTuZpcTa6OnpdfftkeOHCg3apVK7tLly72lClT7PLycr8xgQq5zzzzjH32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GwAQdV999ZUmTpyov//972rTpk1Ez6moqFBFRUX1/fLy8liFF1+B2qcNHCi5XMFXo0s1/dPJ2wDQrLASHQar2gAASGyWJc2eXf947c3MAACIEtu2NW7cOF1++eXq379/xM9bvHixOnToUH3LyMiIYZQJJj1dWr3a9EwPxtc/HQDQrFBER82qNt/Zci4xAwAg8ZSU+G9i5uN2MxkHAERszpw5crlcIW8ffvihVqxYoe+++05z585t0OvPnTtXZWVl1bfdu3fH6DtJUPn50s6dptXL1q3SjBmB+6cDAJoV2rmkunCr2kjuAAAkhuxsUzCvW0hfsoR8DQCI2DXXXKNx48aFHNOrVy89//zzeu2115SWlub3WP/+/XXxxRdr3bp1AZ+blpZW7zkpp3arl5wc6corzfw6K4ucDQDNFEX0VMeqNgAAmof0dKmoyFwtVllpcvXSpWaFGwAAEerSpYu6dOkSdtztt9+um266qfr+559/ruHDh+vBBx/UqaeeGssQk0+g/ukAgGaFInoqqr2BKKvaAABoPvLzzSairGYDAMRYjx49/O63bdtWktS7d2+lk38AACmGnuipxuut2UC0Rw/p6afNqjZfjza322wyOnNmfOMEACS90tJS5efnq2fPnmrdurV69+6t66+/Xj/++GO8Q4svyzJ9VIPtTZKeLuXmUkAHAAAAAIekxEr0iooKnXrqqXr77bf15ptv6sQTT4x3SPFhWdKECTX3bVuaOFHatUsqLWVVGwDAUR9++KGqqqq0atUqZWVl6b333tPEiRN14MABFRYWxju8+PB6pUmTzBVibrc50Z2fH++oAADQEUccIdu24x0GAABxkRJF9FmzZumwww7T22+/He9Q4qtWP7tqti299pqUl0fxHADgqBEjRmjEiBHV93v16qWPPvpIK1euTM0iumXVFNAl83XyZNO+hRwNAAAAAHGT9O1cnnzyST3zzDOpORmvrbhYWrUq3lEAABBSWVmZOnfuHO8w4iPQZt+VleZKMQAA4JxwrdUAACknqYvoX331lSZOnKh77rlHbdq0iXc48eP1SqecEvgxl0saMMDZeAAACGDHjh1asWKFJk+eHHRMRUWFysvL/W5Jw7fZd20ej2m1BgAAnOH1SpmZZh+xzExzHwCQ8pK2iG7btsaNG6fLL79c/fv3j/h5STc5tyzT9zyYZcu4RBwA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S/zk/e677zYrVqxoHjhwoODY6tWrTUnmvHnzyrrcMmEYhlm+fPlC/1d5eXnmNddcY8bGxppnz551e/7SpUtNSeby5csLjh07dsysWrWqefvtt/us7ot18OBBMzc31zRN07ziiitKNBj/7bffzEsvvdTs1atXoeMDBw40L7nkEvPEiRNlWWrQuZi/LSX53l/s7zPgj44fP17si9FDhw41JZm7d+/2+BjNmjUzW7ZsaZ45c6bg2JQpU0yHw2F+//33parLrhCdftuJfts9+u2LQ78NAABCAcu5BIlvvvlGDodDH3zwQcGxLVu2yOFw6KqrrirU9oYbblCHDh0u6utlZ2dr9erVuuOOOxQVFVVwfNCgQapcubKWLVvm9WP9/vvv+uOPPy6qngs988wzio+PV8WKFdWlSxft2LGjTB63evXqqlKlSqnP/8c//qHevXurXr16Bcd69OihP/3pTyX6np2vfv36GjJkSJHjXbt2LdVbmS/0/vvv68yZM/rb3/5WcMzhcOjuu++WYRjasGGD2/Pffvtt1apVS7fcckvBsZiYGPXv31/vv/++cnJySlXXBx98oI4dO+qSSy4pdlmgixUXF6ewsNL9iVy7dq1++umnQt8zSRo1apROnTqlDz/8sMSPef6a//Pnz1ejRo0UERGhdu3aKSMjo0j7Tz/9VNdcc40uueQSVa1aVTfffLO+//77Qm2KW1t18+bNSkpKUo0aNVSxYkU1aNBAd911V6Hz8vLy9Oyzz+qKK65QZGSkatWqpREjRujnn38u8XVd6GL/tpTke3+xv8+AN6zun2vUqKErrriiyPG//OUvklTk78CFvvvuO3333XcaPny4ypUrV3D8b3/7m0zT1Ntvv31R9b3xxhtq0qSJIiMj1aZNG33++ecX9Xie0G870W+7R79devTbAAAgVJTz3ASBoHnz5qpatao+//xz/d///Z8k6YsvvlBYWJj+85//KDs7W1FRUcrLy9P69es1fPjwgnNPnjzpVYhdvnx5RUdHS5K2b9+us2fPqm3btoXaVKhQQa1atdLXX3/tVd2LFy/WSy+9JNM01bRpU02dOlV//etfvb3sYr366qv69ddfNWrUKP3xxx967rnn1L17d23fvl21atWSJOXk5OjXX3/16vFq1KhxUfXkO3z4sI4dO1bkeyZJ7du316pVq8rk67jzv//9z6t2VapUUUREhCTp66+/1iWXXKKmTZsWatO+ffuC+6+++mqXj/X111/rqquuKjKwbd++vebPn6///ve/atGiRUkuQ2vWrFGfPn102WWX6cEHH1SFChW0YMEC7d69W61bty4UdmRlZenMmTMeHzMyMlKVK1cuUR2u5P/8X/h/3aZNG4WFhenrr7/WHXfcUarHXrJkiX799VeNGDFCDodDs2bN0i233KIffvhB5cuXlyT961//0g033KCGDRvq73//u37//XfNnj1bnTt31tatW1W/fv1iH/vYsWO6/vrrFRMTowceeEBVq1bV/v379c477xRqN2LECC1evFhDhw7VPffco3379umFF17Q119/rS+//LKgDjv+tvjyew+UhtX9syuZmZmSPPdprn6H6tatq9jYWK/79+KsW7dOS5cu1T333KOIiAi99NJL6tmzpzZt2qTmzZtLks6cOaOsrCyvHq969eqlDk29Qb9Nv02/XTz6bQAAEIoI0YNEWFiYOnfurC+++KLg2BdffKE+ffro/fff1/r169WzZ8+CAfs111xT0G706NF65ZVXPH6NLl266LPPPpMkHTlyRJJUp06dIu3q1KlTqA5XOnXqpP79+6tBgwb68ccf9eKLL2rgwIHKysrS3Xff7fF8V/bs2aPdu3frsssukyT17NlTHTp00JNPPqmnn35akvTmm29q6NChXj2eaZqlruV8nr5nJ06cUE5OTsEg2BdiYmK8ardo0aKCWXJHjhxRrVq1iswSy7+OH3/80e1jHTlyRNdee22R4+efX9LB+PTp0xUREaEvv/yyYOA9ZMgQJSQkqGHDhoVmSt58881at26dx8ccPHiwFi9eXKI6XDly5IjCw8NVs2bNQscrVKigSy+91OP3zJ2DBw9q9+7dqlatmiSpSZMmuvnmm/Xxxx+rd+/ekqSJEyeqevXq2rBhg6pXry5J6tOnj1q3bq1p06a5/H1fv369fv75Z33yySeFBrPTp08v+Pe///1vLVy4UG+88UahF7y6deumnj17avny5QXH7fjb4svvPVAaVvfPxTl9+rSeffZZNWjQQO3atXP7WJ5+By/md2jHjh3avHmz2rRpI0m67bbb1KRJEz388MMFod+XX36pbt26efV4+/btcxkulgX67cLot0uHfpt+GwAABAdC9CByzTXXaOrUqTp16pQuueQS/fvf/9aMGTN04MABffHFF+rZs6e++OILORyOQjOQJk2a5NUMj/wn/5JzCRZJxQ4cIyMjC+5358svvyz0+V133aU2bdrowQcf1JAhQ1SxYkWPj1Gc/JlO+dq3b68OHTpo1apVBSF6UlKSVq9eXarHLy1P37P8Nr4cjHt7zecvBeCqpvNrdudiz7/Q6dOn9eWXX+rWW28tNHMtJiZGf/3rX7VgwQKdPn1aFSpUkCQ99dRTXr1duW7duiWqw53ff/+94OtfyNvfD1cGDBhQ6HcxP3D74YcfJDkHo9u2bdOkSZMKBuKSdOWVV+rPf/6z25mTVatWlSStXLlSLVu2LJiZdr7ly5crOjpaf/7znwvNkGzTpo0qV66stWvXFgzG7fjb4svvPVBaVvbPxRk9erS+++47ffjhh4WWaCmOp9/B7Oxsj/W4kpiYWBCgS1K9evV08803a8WKFcrNzVV4eLhatmzpdV9Vu3btUtfiDfrt0p1/Ifpt+m136LcBAECgIEQPItdcc43Onj2rDRs2KC4uTseOHdM111yjb7/9tmAWyBdffKFmzZoVepLerFkzNWvWrERfKz/gLm5dzD/++KNUAXiFChU0evRojRw5Ulu2bHH7VmN3GjduXOTYhWuX1qlTp9gZM77k6Xt2fhtf6dGjR4nPqVix4kXVfLHnX+h///ufzpw5oyZNmhS5r2nTpsrNzdWBAwcKfg7OD2ysUrFiRZ0+fbrY+0r7+5Hv/ABCOjeQzQ8cDhw4IEkuvz8ff/xxQZB3oS5duujWW2/VI488omeeeUZdu3ZVnz599Ne//rVgcLx7925lZWUVmTGW79ixYwX/tuNviy+/90BpWdk/Xyg1NVULFizQY489phtvvNFje1/07/lc9c+//fabjh8/rtq1a6tatWol7qt+//33IkvAlEXATr9duvMvRL9Nv+3pfPptAAAQCAjRg0jbtm0VGRmpzz//XPXq1VPNmjX1pz/9Sddcc41eeukl5eTk6IsvvijYXCxfVlaWV7M8KlSoUDC4zw+g89/Ceb4jR46UenZQXFycJOnEiROlOt9bxQ24XSmrmW6evmfVq1cv09lspmkWeSt3/pq4nkRHRxcMWurUqaO1a9cWebz86/D0f12nTh2X1+zN+RcKDw+XJOXm5ha5L//Y+WupnjhxwuXg7HwVK1b0uKawt+rUqaPc3FwdO3as0KD19OnT+umnny5q9lz+9V+oLJYdcjgcevvtt/XVV19pxYoV+vjjj3XXXXfpqaee0ldffaXKlSsrLy9PNWvW1BtvvFHsY5y/9IAdf1t8+b0HSsvK/vl8ixcv1v3336+RI0dq6tSpXtV6/u9gfp+c78iRIwXravvK6dOnvX4OEBMTo/DwcC1durTIEm1l8TeRfrsw+u3Sod+m3wYAAMGBED2IVKhQQe3bt9cXX3yhevXqFbxd9JprrlFOTo7eeOMNHT16tMg6l2PHji3x+ofNmzdXuXLltHnzZvXv37+gzenTp7Vt27ZCx0oi/62t3q4BWpzdu3cXOfbf//630LqpxQ24XSmrNdEvu+wyxcTEaPPmzUXu27Rpk1q1alXqxy5uk9SjR48WeQHA29n356+t2qpVKy1cuFDff/99odlJGzduLLjfnVatWumLL75QXl5eoU3KNm7cqEqVKulPf/qTVzXli4mJUZUqVbRz584i9+3cuVNhYWGFZn3dcsstlq+tmv892bx5c6GZn5s3b1ZeXt5F/V97Eh8fL0natWtXkft27typGjVqFDub7XwdO3ZUx44d9fjjj2vJkiUaOHCg3nrrLQ0bNkyNGjXSv/71L3Xu3Nnj7DA7/rbY+b0HXLGyf873/vvva9iwYbrlllv04osvel3r+b9D5wfmP/74owzDKLTxaUm56p8rVapU0O+vX7++xGui+2qJNvpt+m367eLRbwMAgFBEiB5krrnmGj399NPau3ev7rvvPklSjRo11LRpUz355JMFbc5XmvUPo6Oj1aNHD73++ut66KGHVKVKFUnSa6+9ppMnT6pfv34FbX/77TcdPHhQNWrUUI0aNSRJx48fLxKU//rrr3r22WdVo0aNi3or73vvvafDhw8XrIu+adMmbdy4UePGjStoY8Wa6Hv37pUkNWrUqODYrbfeqldeeUWHDh0qmOG3Zs0a/fe//9W9995b6q+1YcMG/fHHHwXrlX777bfavXu3atWqVahdadZWvfnmm3XvvffqpZde0gsvvCDJ+cLC3Llzddlll6lTp04FbY8cOaKsrCw1atSoYF3Ovn376u2339Y777yjvn37SnK+tXv58uW66aabSjyLLywsTL169dI777yjH374QQ0bNiz42m+++aa6dOmiypUrF7T39dqqxf18d+/eXdWrV9ecOXMKDQjnzJmjSpUqqVevXqX6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/i9/GRfTLNl5CxcSoAMBYvTo0Ro9erTdZQC4GKmp0uzZntv16uXcHBwAAAAIEIToAPzfmDElW8ZlxgzpzjsJ0AEAsMrKldKkSZ7brVgh9e7t+3oAAACAMkSIDsC/tWsnbd7sffukJGnyZN/VAwAACuvfX1q+3HO7Bx8kQAcAAEBAIkQH4J8MQ3r11ZIF6A6HcwkXAABgDW8D9F69pMcf9309AAAAgA8QogPwP/mbiJZkDfTwcGnePJZwAQDAKk2bSjt3em43ZYo0fbrv6wEAAAB8JMzuAkri888/10033aS6devK4XDovffe83jOZ599pquuukoRERFKSEjQ4sWLfV4ngIuQkSENG+Z9gD5lirR2rbR/v5Sc7NPSAADA/9e5s3cB+qZNBOgAAAAIeAEVop86dUotW7bUiy++6FX7ffv2qVevXurWrZu2bdumcePGadiwYfr44499XCmAUklLk9q39779gw86B+ZduzIDHQAAq0ydKq1f77ndwoXOvU0AAACAABdQy7nccMMNuuGGG7xuP3fuXDVo0EBPPfWUJKlp06b697//rWeeeUZJSUm+KhNAaaSmSpMmed/+lltYWxUAAKtlZHjuf6tWlbZv5wVuAAAABI2AmoleUhs2bFCPHj0KHUtKStKGDRtcnpOTk6Ps7OxCNwA+ZhglC9Al6bnnfFMLAAAoXmqq53eMxcRIP/9MgA4AAICgEtQhemZmpmrVqlXoWK1atZSdna3ff/+92HNmzpyp6OjogltcXJwVpQKhrSRrpToczreHMzgHAMA699zj+QXvihWlY8esqQcAAACwUFCH6KUxefJkZWVlFdwOHTpkd0lAcDMMaf5879p27CgdPMgGogAAWKlXL2n2bPdtYmKk336zph4AAADAYgG1JnpJ1a5dW0ePHi107OjRo4qKilLFihWLPSciIkIRERFWlAeENsOQdu+W+vSRTNNz++7dpTVrfF4WAAA4T48envvfyy5z9usAAABAkArqED0xMVGrVq0qdGz16tVKTEy0qSIAkqT0dGn4cCkvz7v2d9whvfaab2sCAACFRUZKOTnu20RFEaADAAAg6AXUci4nT57Utm3btG3bNknSvn37tG3bNh08eFCScymWQYMGFbQfOXKkfvjhB02aNEk7d+7USy+9pGXLlunee++1o3wAhiEtWyYNG+Z9gB4eLs2c6du6AABAYWFhngN0ScrK8n0tAAAAgM0CKkTfvHmzWrdurdatW0uSxo8fr9atW+vhhx+WJB05cqQgUJekBg0a6MMPP9Tq1avVsmVLPfXUU1q4cKGSkpJsqR8IaenpUr160oAB3p8TFibNm8cmogAAWKlmTc9LrVWr5t1ybAAAAEAQcJhmyZ79Dh48WMnJybr22mt9VZNfyc7OVnR0tLKyshQVFWV3OUDgMQxp/fqSheeSM0D/6iupXTvf1AUEibLqpwK1f6efBsrYgAHOd425c9VV0pYt1tQDBDj6KQAAgkOJZ6JnZWWpR48eaty4sWbMmKHDhw/7oi4AwSA9XYqPL3mAHh4uzZ9PgA5YiP4dgDp18hygt21LgA4AAICQU+IQ/b333tPhw4d19913a+nSpapfv75uuOEGvf322zpz5owvagQQiAyjZJuHxsRITz0lrV0r7d8vJSf7tDwAhdG/AyHu0kulDRvct4mPlzIyrKkHAAAA8COlWhM9JiZG48eP13/+8x9t3LhRCQkJuvPOO1W3bl3de++92r17d1nXCSDQ7N7tfYAuSVu3SuPHS127sgY6YBP6dyBEhYVJJ064bxMf73yRGwAAAAhBF7Wx6JEjR7R69WqtXr1a4eHhuvHGG7V9+3Y1a9ZMzzzzTFnVCCAQHTjgfduhQwnOAT9C/w6EkCpVPG8Q2qIFAToAAABCWok3Fj1z5ow++OADLVq0SJ988omuvPJKDRs2TH/9618LNkp59913ddddd+nnn3/2SdFWYiMYoIQMQ3ruOSktzbv2tWtLR474tiYgiJVVPxWo/Tv9NHARKleWTp1y36ZFC+mbb6ypBwhC9FMAAASHciU9oU6dOsrLy9Ptt9+uTZs2qVWrVkXadOvWTVWrVi2D8gAElPT0kq2Dfvnl0vff+7YmAF6hfwdCTEKC5wD9oYekRx+1ph4AAADAj5V4Jvprr72mfv36KTIy0lc1+RVmDgBeMgypXj3PbwnPV7Wq5EezWYFAVVb9VKD27/TTQCk0bSrt3Om+TZs20ubN1tQDBDH6KQAAgkOJ10S/8847A26ADcACDzzgfYAuSZ984rtaAJQY/TsQInr08BygDx1KgA4AAACc56I2FgUAGYY0YoT0xhven9O3r9Sune9qAgAAhWVkSJUqSWvWuG/34IPSyy9bUxMAAAAQIAjRAZReeroUHy/Nn+/9OWPGSMuX+64mAABQWL9+Uvv20u+/u2/Xu7f0+OPW1AQAAAAEEEJ0AKVjGFJKivebiDoc0qxZ0vPP+7YuAABwzj33SG+/7bldVJS0YoXv6wEAAAACUDm7CwAQoEq6BvrGjSzhAgCAlaZMkWbP9tyOTUQBAAAAt5iJDqBkDEP6y19KtgZ6aioBOgAAVpo6VZoxw32b8HBp0yYCdAAAAMADQnQA3ktLk+LipPfe8/6cWbOkCRN8VhIAALhAWpp3a5u/9x4vcgMAAABeYDkXAN5JTZUmTSrZOcuWOTczAwAA1sjIkCZO9NyuUyfnRqIAAAAAPGImOgDPDKPkAXp4uJSY6Jt6AABAUWlpUvv2ntutWCF9+aXv6wEAAACCBDPRAXjWt2/J2oeHS/PmSbGxvqkHAAAUNmaM9MIL7tvUqCEdP25NPQAAAEAQIUQH4F67dt5tONawofTQQ1L9+lJCAgE6AABWue466dNPPbf7+mvf1wIAAAAEIUJ0AMUzDKltW+noUc9t//IX6Z13fF8TAAAorFcv7wL0WbN4gRsAAAAoJdZEB1BUeroUF+ddgC5Jzz/v23oAAEBRK1dKq1Z5bpea6t1mowAAAACKxUx0AIUZhjRsmPftmdkGAID1pkyRZszw3O7QIfppAAAA4CIRogM4xzCk227zvn1qqjRhgu/qAQAARfXvLy1f7rkdAToAAABQJgjRATilp3s/A71VK2nFCgbmAABYLSPDuwB94UL6aQAAAKCMsCY6gJIt4TJlivT11wzMAQCw2uLFUrdu7tuEhTlnoCcnW1ISAAAAEAqYiQ6EMsOQdu+W7rvPu/Z33y1Nn+7bmgAAQFH160sHDrhvU768dPq0JeUAAAAAoYQQHQhV6elSSopkmt6f42n2GwAAKHs9engO0CMjpd9/t6YeAAAAIMQQogOhyDBKHqA7HFJiou9qAgAARbVtK23Z4r5NpUrSqVPW1AMAAACEINZEB0LRihUlC9AlacEC1kEHAMBK48Z5DtB79yZABwAAAHyMmehAqElPl/72N+/aDhsmtWnjHKAToAMAYJ06daTMTPdthg6VXn7ZmnoAAACAEEaIDoQKw5DWr3cu4+KNCROk1FTf1gQAAIqKjfUcoDdsSIAOAAAAWIQQHQgF6enS8OFSXp537R0OaexY39YEAACK6t5dOnzYfZvq1aW9e62pBwAAAAAhOhD0MjKcy7KUxKxZLN8CAIDVHn5YWrvWfZvwcOmnn6ypBwAAAIAkQnQguKWne798S75Zs5xLuQAAAOvExnqegR4VJWVlWVMPAAAAgAJhdhcAwEcMwxmgm6Z37fv2lQ4dkiZO9G1dAACgsKZNPQfoV19NgA4AAADYhJnoQLDq29f7AF2SJk1iCRcAAKxWv7504ID7NpddJn3xhSXlAAAAACiKmehAMJo6Vdq40fv2gwdL7dr5rh4AAFBUbKznAL1/f+e7ywAAAADYhpnoQLDJyJAef9y7ttOmSb16EaADAGC1hATPS7gMGSItWmRJOQAAAABcI0QHgkl6ujRsmOd2Doe0YIGUnOz7mgAAQGHt2kl797pv06IFAToAAADgJ1jOBQgWK1d6F6APHCgdPEiADgCA1QxDqlBB2rzZfbu2baVvvrGmJgAAAAAeEaIDwaBfP+mmm7xr+8QTbCAKwC/s379fycnJatCggSpWrKhGjRpp2rRpOn36tN2lAWVvyhQpLk46c8Z9u0sucS7NBgAAAMBvsJwLEOjuuUd6+23v2+/ZQ4gOwC/s3LlTeXl5mjdvnhISErRjxw6lpKTo1KlTSktLs7s8oOz07i19+KHndmPHSs8+6/NyAAAAAJQMIToQyFJTpdmzvW8fHu7cyAwA/EDPnj3Vs2fPgs8bNmyoXbt2ac6cOYToCB733ONdgD5rljRxou/rAQAAAFBihOhAoFq8WJo0yfv24eHSvHnMQgfg17KyslS9enWX9+fk5CgnJ6fg8+zsbCvKAkrH2xe7x4whQAcAAAD8GGuiA4HoyiuloUO9a+twSMuWSfv3s5koAL+2Z88ezZ49WyNGjHDZZubMmYqOji64xcXFWVghUAKG4d2L3W3bSs8/7/t6AAAAAJQaIToQSAxDat5c2r7du/YOh7RggXPjUWagA7DIAw88IIfD4fa2c+fOQuccPnxYPXv2VL9+/ZSSkuLysSdPnqysrKyC26FDh3x9OUDJGYbUuLHndpddxiaiAAAAQABgORcgUKSnS8OGed++Sxfp9dcJzwFY7r777tOQIUPctmnYsGHBv3/88Ud169ZNnTp10vz5892eFxERoYiIiLIoE/CNtDTvlmZ56ilp/Hjf1wMAAADgohGiA4HAMEoWoD/4oPT4476rBwDciImJUUxMjFdtDx8+rG7duqlNmzZatGiRwsJ4kxwCWGqqd0u4TJlCgA4AAAAEkIAbqb744ouqX7++IiMj1aFDB23atMll28WLFxd5+3hkZKSF1QJlwDCk66/3ru0tt0iHDhGgAwgIhw8fVteuXVWvXj2lpaXp+PHjyszMVGZmpt2lASXn7RrofftK06f7vh4AAAAAZSagZqIvXbpU48eP19y5c9WhQwc9++yzSkpK0q5du1SzZs1iz4mKitKuXbsKPnc4HFaVC1w8b2e0SdKNN0r/+Idv6wGAMrR69Wrt2bNHe/bsUewFS0+ZpmlTVUApNWvmuc2iRZKHpY4AAAAA+J+Amon+9NNPKyUlRUOHDlWzZs00d+5cVapUSS+//LLLcxwOh2rXrl1wq1WrloUVAxdh6lTvA/SuXaUPP/RpOQBQ1oYMGSLTNIu9AQHDMKRq1aRff3XfbvBgAnQAAAAgQAVMiH769Glt2bJFPXr0KDgWFhamHj16aMOGDS7PO3nypOLj4xUXF6ebb75Z3377rduvk5OTo+zs7EI3wHJpaSVbkuVvf/NdLQAAoHhjxkhxcdIvv7hvt2KFtHixFRUBAAAA8IGACdH/97//KTc3t8hM8lq1arlcO7VJkyZ6+eWX9f777+v1119XXl6eOnXqJMMwXH6dmTNnKjo6uuAWFxdXptcBuGUY0rJl3s9AlySHQ0pM9F1NAACgqHbtpBde8NwuNVXq3dv39QAAAADwmYAJ0UsjMTFRgwYNUqtWrdSlSxe98847iomJ0bx581yeM3nyZGVlZRXcDh06ZGHFCGnp6VK9etKAAZK3SxmEhUkLFkgXrCUMAAB8aPFiafNmz+1mzZImTPB5OQAAAAB8K2A2Fq1Ro4bCw8N19OjRQsePHj2q2rVre/UY5cuXV+vWrbVnzx6XbSIiIhQREXFRtQIlZhhSSor34bnknLGemEiADgCAlYYO9bw0S7Vq0jff0EcDAAAAQSJgZqJXqFBBbdq00Zo1awqO5eXlac2aNUr0cimL3Nxcbd++XXXq1PFVmUDprF9fsgB91iypXz8G5wAAWCk62nOAXquWdOIEfTQAAAAQRAJmJrokjR8/XoMHD1bbtm3Vvn17Pfvsszp16pSGDh0qSRo0aJAuu+wyzZw5U5L06KOPqmPHjkpISNAvv/yi1NRUHThwQMOGDbPzMoCifvrJ+7ZjxkgTJ/quFgAAUFT58tLZs57bebPMCwAAAICAElAh+oABA3T8+HE9/PDDyszMVKtWrfTRRx8VbDZ68OBBhYWdm1z/888/KyUlRZmZmapWrZratGmj9evXq1mzZnZdAnCOYThnoO/ZIz3zjHfn9OsnPf+8b+sCAACFNWjgXYC+cCEz0AEAAIAg5DDNkqwhEXqys7MVHR2trKwsRUVF2V0OgkV6ulSSd0QMHiyNGiW1a+e7mgAEpFDvp0L9+mGB2rWlC/bkKSI6WtqxgwAdQBH0UwAABIeAmokOBAXDKFmA7nBI06czMAcAwGoVK0p//OG+zeWXS99/b009AAAAAGwRMBuLAkHjnnu8b+twSAsWEKADAGC1KlU8B+jVqxOgAwAAACGAmeiAlbp3l9au9b79xo0s4QIAgNVq1ZJOnnTfpn59ad8+S8oBAAAAYC9mogNW6d27ZAH6rFkE6AAAWK1mTenYMfdtevUiQAcAAABCCDPRAV8zDGnFCunDD71r73A4A/QJE3xbFwAAKKxHD+n4cfdtLr9cWrnSmnoAAAAA+AVCdMCX0tOl4cOlvDzv2s+YId15J2ugAwBgtfr1pQMH3Ldp00bavNmScgAAAAD4D0J0wFcMQ0pJkUzTu/aDB0uTJ/u2JgAAUFSdOlJmpvs2vXoxAx0AAAAIUayJDvjKihXeB+iLFkmLF/u0HAAAUIxx4zwH6A89RIAOAAAAhDBmogO+YBjSBx9417ZfP2nIEJ+WAwAALmAY0rXXet4gND5eevRRa2oCAAAA4JeYiQ6UtalTpbg46aOPPLf9y1+kZct8XxMAADgnPd3ZV3sK0Hv3lvbvt6QkAAAAAP6LmehAWerVS1q1yvv2zz/vu1oAAEBRhiENG+a5XffuzqXZAAAAAIQ8ZqIDZWXqVO8DdIdDWrhQio31bU0AAKCwpk09t+nUSVqzxve1AAAAAAgIzEQHLpZhOGeqPf64+3YOhzRihHNmW2IiAToAAFYbMEA6edJ9m06dpC+/tKYeAAAAAAGBEB24GOnpUkqKZJqe227cKLVr5/uaAABAUYsXe96HpFcvaeVKS8oBAAAAEDgI0YHS8nZNVYdDWrCAAB0AADsYhnTtte43Ea1Rw7kkG301AAAAgGKwJjpQWtOne26zbJl08KCUnOz7egAAQGFpaVJcnPsAXSJABwAAAOAWITpQGlOnSvPmeW4XE8Pa5wAA2CE1VZo40XO7wYMJ0AEAAAC4RYgOlFRqqudNRPMlJPi2FgAAUFRGhjRpkvs2t98ubdrkXCsdAAAAANwgRAdKwjA8D8rzLVzILHQAAKyWmiq1b+++TYsW0pIlzEAHAAAA4BU2FgW8YRjS+vXSO+94bnv//dLo0QToAABYLS3N84vdV14p/ec/1tQDAAAAICgQogOepKdLKSmSaXpum5oqTZjg+5oAAEBhhuF5DfRq1QjQAQAAAJQYy7kA7hiGNHy4dwH6rFkE6AAA2MEwpOuv99zum298XwsAAACAoEOIDrize7eUl+e53YoVnme/AQCAsjd1qhQXJ33/vft27FUCAAAAoJRYzgVw58ABz2369pV69/Z9LQAAoLB+/aS333bf5pZbpOeeI0AHAAAAUGrMRAcuZBjS2rXOYHzoUPdtp0yRli+3pi4AAHDOypWeA/Qbb5T+8Q8CdAAAAAAXhZnowPnS051roHtawuXPf5ZefplBOQAAdpg6VXr8cfdt6tWTPvzQmnoAAAAABDVCdCDfypVSSop3m4gSoAMAYI9evaRVqzy3e/FF39cCAAAAICSwnAtgGFJSknTTTZ4DdIeDjckAALDLTTd5F6B36sR+JQAAAADKDDPREdq8Xb5Fkjp2dK5/ToAOAID16tSRMjPdt6lWTXr1VQJ0AAAAAGWKEB2hKyPD+wBdkmbOJEAHAMAO7dp5DtAbNZL27LGmHgAAAAAhheVcEJqmTJHat/c+QA8PlxISfFsTAAAo6q67pM2b3bfp1IkAHQAAAIDPMBMdoad/f+eyLN4KD5fmzWMWOgAAVuvdW/rwQ/dt+veXli61ph4AAAAAIYkQHaElI6NkAfqcOc4BPAE6AADWGjPGc4B++eUE6AAAAAB8jhAdoeWLL7xvO3iwNHKk72oBAADFGzBAWrbMfZvOnaV//9uaegAAAACENEJ0hJY1azy3GTXKGaC3a+f7egAAQGF16njeRHTIEGnRIkvKAQAAAABCdIQGw5BWrJBWrXLfLjxceuABlm8BAMAOnTt7DtA7dyZABwAAAGApQnQEv/R0afhwKS/PfTuHgw1EAQCwS0aGtH69+zaXX84SLgAAAAAsF2Z3AYBPZWRIKSmeA/SOHaWDB6XkZGvqAgAATobh3Mi7f3/37fr3l77/3pqaAAAAAOA8zERH8EpPdwbopum+Xffu3q2VDgAAylZ6ujRsmOd2fftKS5f6vh4AAAAAKAYz0RGcDMNzgO5wSFOmEKADAGAHw/AuQF+xQlq+3Pf1AAAAAIALzERHcFq/3nWAPnSoNGiQlJDA+ucAANilaVPPbVJTpd69fV8LAAAAALhBiI7QU6mS1LWr3VUAABC6evSQTp503+bBB6UJE6ypBwAAAADcYDkXBA/DkNaudX7s1Ml1u549rasJAACck5EhNWvmeSm1oUOlxx+3piYAAAAA8IAQHYHPMKSRI6V69ZybhNarJ735prRwYdG2nTrxtnAAAOzQv7/Uvr30/ffu27VpI738sjU1AQAAAIAXCNER2FJTpbg4ad68c2ugm6Y0aZL088/SoUPSjBnS4MHOjcm+/NLeegEACEVjxnjeHLRcOWdfvXmzNTUBAAAAgJdYEx2BKy3NGZa7cv/90m23SZMnW1cTAAAoLC1NeuEFz+327WPDbwAAAAB+iZnoCEyG4T5Al6S8PGnPHmvqAQBclJycHLVq1UoOh0Pbtm2zuxyUFcOQJk703C41lQAdAAAAgN8KuBD9xRdfVP369RUZGakOHTpo06ZNbtsvX75cl19+uSIjI9WiRQutWrXKokrhU+vXn1u+xZXwcCkhwZp6AAAXZdKkSapbt67dZaCsXXut5zazZkkTJvi+FgAAAAAopYAK0ZcuXarx48dr2rRp2rp1q1q2bKmkpCQdO3as2Pbr16/X7bffruTkZH399dfq06eP+vTpox07dlhcOcpUero0YID7NuHhznXSmdUGAH7vn//8pz755BOlpaXZXQrK0sqVziVaXJkzx7l3iTcz1QEAAADARg7T9DSd13906NBB7dq10wv/f13NvLw8xcXFacyYMXrggQeKtB8wYIBOnTqllStXFhzr2LGjWrVqpblz53r1NbOzsxUdHa2srCxFRUWVzYWg9AxDqlfP/Sz0OXOk3r0J0AGEhEDvp44ePao2bdrovffeU40aNdSgQQN9/fXXatWqVbHtc3JylJOTU/B5dna24uLiAvb6g5JhSK++Ki1c6DpEf/BB6fHHra0LAGwQ6P00AABwCpiZ6KdPn9aWLVvUo0ePgmNhYWHq0aOHNmzYUOw5GzZsKNRekpKSkly2l5yD8+zs7EI3+JHp0z0v43L55QToABAATNPUkCFDNHLkSLVt29arc2bOnKno6OiCW1xcnI+rRImkp0txcdKUKa4D9CuuIEAHAAAAEFACJkT/3//+p9zcXNWqVavQ8Vq1aikzM7PYczIzM0vUXmJw7temTnUu0eIO66ADgO0eeOABORwOt7edO3dq9uzZ+vXXXzV58mSvH3vy5MnKysoquB06dMiHV4ISMQxp2DDP7T76yPe1AAAAAEAZKmd3Af5m8uTJGj9+fMHn+W8Th82mTJFmzHDfhnXQAcAv3HfffRoyZIjbNg0bNtSnn36qDRs2KCIiotB9bdu21cCBA/XKK68UOS8iIqJIe/iJV191f7/DIS1YQD8NAAAAIOAETIheo0YNhYeH6+jRo4WOHz16VLVr1y72nNq1a5eovcTg3C+lpbkP0BctkurXd85AZ2AOALaLiYlRTEyMx3bPP/+8pk+fXvD5jz/+qKSkJC1dulQdOnTwZYkoa+npzhe8XZkxQ7rzTvppAAAAAAEpYEL0ChUqqE2bNlqzZo369Okjybmx6Jo1azR69Ohiz0lMTNSaNWs0bty4gmOrV69WYmKiBRWjTBiGdP/9ru+fNUvyMNsRAOCf6tWrV+jzypUrS5IaNWqkWMLWwGAY0vr10vDhrtu0aCGVYMkeAAAAAPA3AROiS9L48eM1ePBgtW3bVu3bt9ezzz6rU6dOaejQoZKkQYMG6bLLLtPMmTMlSWPHjlWXLl301FNPqVevXnrrrbe0efNmzZ8/387LgDcMQ9q9Wzp+XMrLK77NlCnSxInW1gUAAJzS053huat+WpK6d5fWrLGuJgAAAADwgYAK0QcMGKDjx4/r4YcfVmZmplq1aqWPPvqoYPPQgwcPKizs3F6pnTp10pIlSzR16lQ9+OCDaty4sd577z01b97crkuAN6ZOdb7t2zSd66c6HM5/n+/BB6XzlgAAAAS++vXry7zw7z3808qV7jcRdTikDz6Qeve2riYAAAAA8BGHyWjVrezsbEVHRysrK0tRUVF2lxP8+vWT3n678DGHQwoLk3JznR+ffFKaMMGe+gDAz4R6PxXq12+LIUOkYjZ9LZC/0XdysmUlAYC/op8CACA4BNRMdAS5jIyiAbrknIX+5ptSTAybhwIAYKeMDNcBeliY9NZbUmIifTUAAACAoEKIDv/xxRfFH3c4GJADAGA3w5Bmz3Z9//z5zneUAQAAAECQIUSH/fI3Ef3Tn4q//8EHCdABALBTerqUklJ0j5J8M2awfAsAAACAoEWIDnulp0vDh0t5ec63gXfqJK1ff+7+vn3ZQBQAADtlZHjeRPTOO62rBwAAAAAsRogO+xjGuQBdcn7cuFFasULas0fq3Flq187eGgEACGXp6e4D9LAw5zIuvGMMAAAAQBAjRId9du8+F6Dny82VKleWxo2zpSQAAPD/eZqBnpQkLVxIgA4AAAAg6IXZXQBCiGFIa9c6PxqGdPy48y3g5wsPlxIS7KkPAAA4padL7du7bzN6NAE6AAAAgJDATHRY4/y1z/ODc9N0/tvhcP47PFyaN48BOQAAdsrIcG4i6k6nTlLv3tbUAwAAAAA2YyY6fO/Ctc9N03nL/3dYmLRsmbR/v5ScbFuZAACEvPR0qWPHc/10cZ56SvryS+tqAgAAAACbEaLD94pb+/x8ublSTAwz0AEAsNOFL3oXZ/Bgafx462oCAAAAAD/Aci7wLcOQli5134Z10AEAsI9hSCtWSBs2uA7Q+/eXJkyQ2rWztjYAAAAA8AOE6PCd89dBvxDroAMAYL/0dGnYMNf3h4VJX31FeA4AAAAgpBGiwzc8vSV86VLnEi4JCQToAADYwTDcB+j5L3QToAMAAAAIcYTo8A1366CHh0uJiYTnAADYafp01/eNGiU98AB9NQAAAACIjUXhK40bO98CfqGwMJZvAQDAbhkZ0vz5ru8fPJi+GgAAAAD+P0J0lB3DkNaudX6MjXUOzsPDnfeFhzs3JDtwQEpOtrdOAABC2dSpUvv2zr1JitOvH0u4AAAAAMB5WM4FZeP8TUTDwpwBenKylJQk7dnD2ucAANjNMKSBA6XPP3fdZvRoafZs62oCAAAAgABAiI6Ld+Emonl50ogRzgA9NpbwHAAAu53/YndxHA5p1iznu8YAAAAAAIUQouPiFbeJaG6ucwY6AToAAPa68MXu4mzcyBIuAAAAAOACITpKzzCk9euln35yLuFy/uA8PNy5hAsAALBXcS92n2/KFAJ0AAAAAHCDEB2lk54upaQU3pQsP0gPD5fmzWMWOgAA/qBxY+dyLcVtJHrttdL06dbXBAAAAAABJMzuAhCA8t8WfuFg3DSlZcuk/fudm4oCAAD7GIa0dq3z308+WfT+sDDpjTesrQkAAAAAAhAhOkruueeKf1u4aUoxMcxABwDAbmlpUny81L2782P16lJqqjM4l5zvGps/nz4bAAAAALzAci4oGcOQnnqq+PvCwlgHHQAAOxmGNGaM9N57547l5UkjRjjfKXbbbc6NvxMSCNABAAAAwEuE6CiZ3buLX1PV4WBGGwAAdkpPl4YNK/6+3FxneN61K301AAAAAJQQITq8ZxjS8ePnNhDN53BIGzdK7drZVxsAAKHMMFwH6BLvFgMAAACAi0CIDs8Mw7kO+tNPO8Nzh+NckB4eLs2bR4AOAICd+vVzf/+TTzIDHQAAAABKiRAd7qWnSykphZdwMU1nkL5smZSYyKAcAAA73XOP9NVXru8fPVqaMMG6egAAAAAgyITZXQD8mGFIw4cXvwZ6Xp4UE0OADgCAnVJTpdmzXd/fq5f7+wEAAAAAHhGiw7XduwuvfX6+8HDWVgUAwE6GId1/v+v7hw6VVq60rh4AAAAACFKE6HCtcWPn2ucXyl8HnVnoAADYwzCcy6oV924xSbrxRunll62tCQAAAACCFCE6XIuNlebPd4bmkjNQnzBB2r9fSk62tTQAAEJWeroUHy/dd1/x948ZI334obU1AQAAAEAQY2NRuJecLCUlSXv2OJdvYfY5AAD2MAxp/fqiG37nCwuTnnhCmjjR+toAAAAAIIgRosOz2FjCcwAA7JSe7tzs29VeJc88I/XtS38NAAAAAD7Aci6hzjCktWudHwEAgP8xDPcBeng4AToAAAAA+BAheijLX1O1e3fnx/R0uysCAAAX2r3bfYDOZt8AAAAA4FOE6KHqwllteXnSiBHMSAcAwN80buxc7/x84eHSsmVs9g0AAAAAFiBED1XFzWrLzXVuIAoAAOyXkSE9/bR05Ig0f74zOJfOzT7v148Z6AAAAABgATYWDVX5s9rOD9LDw6WEBPtqAgAATkOGSK+8cu7zwYOds8737HH21YTnAAAAAGAZZqKHqtjY4me1MSgHAMBeK1cWDtAl5+dHjkhdu9JXAwAAAIDFCNFDWXKyc1bb2rWsqQoAgN0MQ5o4UbrppuLv//JLa+sBAAAAAEhiORfExjKjDQAAu6WnSykpkmm6btO5s3X1AAAAAAAKMBMdAADAToYhDR/uPkAfPFhq1866mgAAAAAABZiJDgAAYKfduwtv9H0+h0P64AOpd29rawIAAAAAFGAmejAyDOc654ZhdyUAAMCTxo2lsGKekoWHSwsWEKADAAAAgM0I0YNNeroUH0jgn1QAABKlSURBVC917+78mJ5ud0UAAMCd2Fhp/nxnaC45A/UJE9j0GwAAAAD8RMCE6CdOnNDAgQMVFRWlqlWrKjk5WSdPnnR7TteuXeVwOArdRo4caVHFNshfUzX/LeF5edKIEcxIBwDA3yUnO0PztWulAwek1FQ2/gYAAAAAPxEwa6IPHDhQR44c0erVq3XmzBkNHTpUw4cP15IlS9yel5KSokcffbTg80qVKvm6VPsUt6Zqbq60Zw8DcQAA/IVhOPvsxo0L98+xsfTXAAAAAOCHAiJE//777/XRRx8pIyNDbdu2lSTNnj1bN954o9LS0lS3bl2X51aqVEm1a9e2qlR7NW7s3IDMNM8dCwuTEhLsqwkAAJyTnn7uXWNhYc5lXFiyBQAAAAD8WkAs57JhwwZVrVq1IECXpB49eigsLEwbN250e+4bb7yhGjVqqHnz5po8ebJ+++03X5frX84P1AEAgH1Ydg0AAAAAAlJAzETPzMxUzZo1Cx0rV66cqlevrszMTJfn/fWvf1V8fLzq1q2rb775Rvfff7927dqld955x+U5OTk5ysnJKfg8Ozv74i/AKrt3Fw3NTZPlXAAA8AcsuwYAAAAAAcnWEP2BBx7Qk08+6bbN999/X+rHHz58eMG/W7RooTp16ui6667T3r171ahRo2LPmTlzph555JFSf01bNW7sfGv4+QP08HCWcwEAwB/QTwMAAABAQLJ1OZf77rtP33//vdtbw4YNVbt2bR07dqzQuWfPntWJEydKtN55hw4dJEl79uxx2Wby5MnKysoquB06dKh0F2eH2Fjn2qrh4c7Pw8OlefOY3QYAgD+gnwYAAACAgGTrTPSYmBjFxMR4bJeYmKhffvlFW7ZsUZs2bSRJn376qfLy8gqCcW9s27ZNklSnTh2XbSIiIhQREeH1Y/qd5GQpKcn51vCEBAbmAAC/9+GHH+rRRx/VN998o8jISHXp0kXvvfee3WX5Bv00AAAAAAScgFgTvWnTpurZs6dSUlI0d+5cnTlzRqNHj9Ztt92munXrSpIOHz6s6667Tq+++qrat2+vvXv3asmSJbrxxht16aWX6ptvvtG9996ra6+9VldeeaXNV1RKhuFcT7VxY/eD7thYBuUAgIDwj3/8QykpKZoxY4a6d++us2fPaseOHXaX5Vv00wAAAAAQUAIiRJekN954Q6NHj9Z1112nsLAw3XrrrXr++ecL7j9z5ox27dql3377TZJUoUIF/etf/9Kzzz6rU6dOKS4uTrfeequmTp1q1yVcnPR0afhw5zqqYWHOt4MnJ9tdFQAApXb27FmNHTtWqampSj6vT2vWrJmNVQEAAAAAUFjAhOjVq1fXkiVLXN5fv359maZZ8HlcXJzWrVtnRWm+ZxjnAnTJ+XHECOfbwZnJBgAIUFu3btXhw4cVFham1q1bKzMzU61atVJqaqqaN29e7Dk5OTnKyckp+Dw7O9uqcgEAAAAAIcrWjUXhpd27zwXo+XJzneupAgAQoH744QdJ0t///ndNnTpVK1euVLVq1dS1a1edOHGi2HNmzpyp6OjogltcXJyVJQMAAAAAQhAheiBo3Ni5hMv5wsOdG5IBAOBnHnjgATkcDre3nTt3Ku//v0A8ZcoU3XrrrWrTpo0WLVokh8Oh5cuXF/vYkydPVlZWVsHt0KFDVl5a8QxDWrvW+REAAAAAEHQCZjmXkBYb61wDfcQI5wz08HBp3jyWcgEA+KX77rtPQ4YMcdumYcOGOnLkiKTCa6BHRESoYcOGOnjwYLHnRUREKCIiosxqvWjsWQIAAAAAQY8QPVAkJzvXQN+zxzkDnQAdAOCnYmJiFBMT47FdmzZtFBERoV27dunqq6+W5NwofP/+/YqPj/d1mRePPUsAAAAAICQQogeS2FgG5QCAoBEVFaWRI0dq2rRpiouLU3x8vFJTUyVJ/fr1s7k6L7jbs4T+GgAAAACCBiE6AACwTWpqqsqVK6c777xTv//+uzp06KBPP/1U1apVs7s0z/L3LDk/SGfPEgAAAAAIOmwsCgAAbFO+fHmlpaXp6NGjys7O1urVq3XFFVfYXZZ38vcsCQ93fs6eJQAAAAAQlJiJDgAAUFrsWQIAAAAAQY8QHQAA4GKwZwkAAAAABDWWcwEAAAAAAAAAwAVCdAAAAAAAAAAAXCBEBwAAAAAAAADABUJ0AAAAAAAAAABcIES3kmFIa9c6PwIAAP9DXw0AAAAAuAAhulXS06X4eKl7d+fH9HS7KwIAAOejrwYAAAAAFIMQ3QqGIQ0fLuXlOT/Py5NGjGCWGwAA/oK+GgAAAADgAiG6FXbvPjcoz5ebK+3ZY089AACgMPpqAAAAAIALhOhWaNxYCrvgWx0eLiUk2FMPAAAojL4aAAAAAOACIboVYmOl+fOdg3HJ+XHePOdxAABgP/pqAAAAAIAL5ewuIGQkJ0tJSc63hSckMCgHAMDf0FcDAAAAAIpBiG6l2FgG5AAA+DP6agAAAADABVjOBQAAAAAAAAAAFwjRAQAAAAAAAABwgRAdAAAAAAAAAAAXCNEBAAAAAAAAAHCBEB0AAAAAAAAAABcI0QEAAAAAAAAAcIEQHQAAAAAAAAAAFwjRAQAAAAAAAABwgRAdAAAAAAAAAAAXCNEBAAAAAAAAAHCBEB0AAAAAAAAAABcI0QEAAAAAAAAAcIEQHQAAAAAAAAAAF8rZXYC/M01TkpSdnW1zJQAAFJXfP+X3V6GGfhoA4M9CvZ8GACBYEKJ78Ouvv0qS4uLi/l979xdTdf3Hcfx1wA5KgkVDywmCtLWciZv5j1yBMq2LirW4cnpK5pIh07lapjm8qNWmmy1zwlrhjc5aDemiFuYEL0whDUMcNExHwJyUk4g2Kc63m99P4Cff70njez4/vp/nY+OCA2yvz+dweHHe58sHw0kAAHDX39+vadOmmY4Rd/Q0AGAisLWnAQAIipDDS+KeotGoenp6lJKSolAoZDrOmH777TdlZGTo559/Vmpqquk4cWHbmllvsLHeYPN7vY7jqL+/XzNnzlRCgn2ntI3s6f7+fqu+t7zY9jjzwl4MYy9GYz+GsRfDxnsvbO9pAACCgivRY0hISNCsWbNMx/hHUlNTrful17Y1s95gY73B5ud6bb6ybWRP//fFbtu+t7ywF8PYi2HsxWjsxzD2Yth47oXNPQ0AQFDwUjgAAAAAAAAAAC4YogMAAAAAAAAA4IIhegAkJSWpoqJCSUlJpqPEjW1rZr3BxnqDzbb1msReD2MvhrEXw9iL0diPYezFMPYCAACMhX8sCgAAAAAAAACAC65EBwAAAAAAAADABUN0AAAAAAAAAABcMEQHAAAAAAAAAMAFQ/QAeu6555SZmanJkyfroYce0tq1a9XT02M6li+uXLmikpISZWdna8qUKcrJyVFFRYUGBwdNR/PN22+/rby8PCUnJ+u+++4zHWfc7d+/X1lZWZo8ebKWLFmixsZG05F8c/LkST377LOaOXOmQqGQjh49ajqSr9555x0tWrRIKSkpmj59uoqKitTe3m46lm8OHDig+fPnKzU1VampqVq2bJm++uor07GsYVMXxmJjV3oJeo96saljvdjWv25s62UvdDYAAIiFIXoAFRQU6NNPP1V7e7s+//xzXbp0SS+++KLpWL5oa2tTNBpVVVWVWltbtXfvXlVWVmr79u2mo/lmcHBQxcXFKi0tNR1l3H3yySfaunWrKioqdO7cOeXm5mr16tW6du2a6Wi+GBgYUG5urvbv3286Slw0NDSorKxMp0+f1rFjx/Tnn39q1apVGhgYMB3NF7NmzdK7776rs2fP6rvvvtOKFSv0/PPPq7W11XQ0K9jUhbHY2JVegtyjXmzrWC+29a8b23rZC50NAABiCTmO45gOAX998cUXKioq0s2bN3XPPfeYjuO73bt368CBA/rpp59MR/HVwYMHtWXLFt24ccN0lHGzZMkSLVq0SB988IEkKRqNKiMjQ+Xl5dq2bZvhdP4KhUKqqalRUVGR6Shx09vbq+nTp6uhoUFPPvmk6ThxkZaWpt27d6ukpMR0FOvY1oWx2NKVXoLYo15s7lgvNvavGxt72QudDQAARuJK9IC7fv26Dh06pLy8PGuGBn19fUpLSzMdA3docHBQZ8+eVWFh4a3bEhISVFhYqG+//dZgMvilr69Pkqx4vA4NDenIkSMaGBjQsmXLTMexjo1dGAtdaRc6Fv+ETb3shc4GAABjYYgeUK+//rruvfdePfDAA+rs7FRtba3pSHHR0dGhffv26ZVXXjEdBXfol19+0dDQkGbMmDHq9hkzZujq1auGUsEv0WhUW7Zs0RNPPKF58+aZjuOblpYWTZ06VUlJSdq4caNqamo0d+5c07GsYWsXxkJX2oeORSy29LIXOhsAAHhhiD5BbNu2TaFQyPOtra3t1ue/9tpr+v7771VXV6fExEStW7dOE+nknjtdryR1d3fr6aefVnFxsTZs2GAo+d25m/UCE1lZWZkuXLigI0eOmI7iq0ceeUTNzc06c+aMSktLFYlEdPHiRdOxJizbujAW27rSCz0K/Du29LIXOhsAAHjhTPQJore3V7/++qvn58yZM0fhcPi227u6upSRkaFTp05NmD9JvNP19vT0KD8/X0uXLtXBgweVkDCxXh+6m/s3aGe5Dg4OKjk5WZ999tmoc0kjkYhu3LgR+CtIbTqTddOmTaqtrdXJkyeVnZ1tOk5cFRYWKicnR1VVVaajTEi2dWEstnWlF3rUm+0d68Wm/nVjcy97obMBAMBIk0wHwD+Tnp6u9PT0u/raaDQqSbp58+Z4RvLVnay3u7tbBQUFWrhwoaqrqyfkUODf3L9BEQ6HtXDhQh0/fvzWE9loNKrjx49r06ZNZsNhXDiOo/LyctXU1Ki+vt7KJ+rRaHRC/Sz+f2NbF8ZiW1d6oUe90bEYC73sjc4GAAAjMUQPmDNnzqipqUnLly/X/fffr0uXLmnnzp3KyckJzJV3I3V3dys/P1+zZ8/Wnj171Nvbe+tjDz74oMFk/uns7NT169fV2dmpoaEhNTc3S5IefvhhTZ061Wy4f2nr1q2KRCJ6/PHHtXjxYr333nsaGBjQyy+/bDqaL37//Xd1dHTcev/y5ctqbm5WWlqaMjMzDSbzR1lZmQ4fPqza2lqlpKTcOod32rRpmjJliuF04++NN97QM888o8zMTPX39+vw4cOqr6/X119/bTpa4NnWhbHY2JVegtyjXmzrWC+29a8b23rZC50NAABichAoP/zwg1NQUOCkpaU5SUlJTlZWlrNx40anq6vLdDRfVFdXO5LGfAuqSCQy5npPnDhhOtq42Ldvn5OZmemEw2Fn8eLFzunTp01H8s2JEyfGvC8jkYjpaL5we6xWV1ebjuaL9evXO7Nnz3bC4bCTnp7urFy50qmrqzMdywq2dWEsNnall6D3qBebOtaLbf3rxrZe9kJnAwCAWDgTHQAAAAAAAAAAF8E6EBMAAAAAAAAAgHHEEB0AAAAAAAAAABcM0QEAAAAAAAAAcMEQHQAAAAAAAAAAFwzRAQAAAAAAAABwwRAdAAAAAAAAAAAXDNEBAAAAAAAAAHDBEB0AAAAAAAAAABcM0QEAAAAAAAAAcMEQHYCvhoaGlJeXpxdeeGHU7X19fcrIyNCOHTsMJQMAABJdDQAAAMQSchzHMR0CQLD9+OOPWrBggT788EOtWbNGkrRu3TqdP39eTU1NCofDhhMCAGA3uhoAAABwxxAdQFy8//772rVrl1pbW9XY2Kji4mI1NTUpNzfXdDQAACC6GgAAAHDDEB1AXDiOoxUrVigxMVEtLS0qLy/Xm2++aToWAAD4D7oaAAAAGBtDdABx09bWpkcffVSPPfaYzp07p0mTJpmOBAAARqCrAQAAgNvxj0UBxM3HH3+s5ORkXb58WV1dXabjAACA/0FXAwAAALfjSnQAcXHq1Ck99dRTqqur01tvvSVJ+uabbxQKhQwnAwAAEl0NAAAAuOFKdAC+++OPP/TSSy+ptLRUBQUF+uijj9TY2KjKykrT0QAAgOhqAAAAwAtXogPw3ebNm/Xll1/q/PnzSk5OliRVVVXp1VdfVUtLi7KysswGBADAcnQ1AAAA4I4hOgBfNTQ0aOXKlaqvr9fy5ctHfWz16tX666+/+FNxAAAMoqsBAAAAbwzRAQAAAAAAAABwwZnoAAAAAAAAAAC4YIgOAAAAAAAAAIALhugAAAAAAAAAALhgiA4AAAAAAAAAgAuG6AAAAAAAAAAAuGCIDgAAAAAAAACAC4boAAAAAAAAAAC4YIgOAAAAAAAAAIALhugAAAAAAAAAALhgiA4AAAAAAAAAgAuG6AAAAAAAAAAAuGCIDgAAAAAAAACAi78B3zI9ZWH6p0YAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "<h3>Explanation Table</h3>\n",
        "<p style=\"font-size:16px\">\n",
        "<table>\n",
        "  <tr><th>Plot #</th><th>Parameter Changed</th><th>Visual Effect</th></tr>\n",
        "  <tr><td>1</td><td>Baseline</td><td>Clear linear with moderate spread</td></tr>\n",
        "  <tr><td>2</td><td>σ reduced</td><td>X values clustered more tightly</td></tr>\n",
        "  <tr><td>3</td><td>noise increased</td><td>y values are more scattered (less clean)</td></tr>\n",
        "  <tr><td>4</td><td>w reduced</td><td>Flatter slope (y increases slower with X)</td></tr>\n",
        "  <tr><td>5</td><td>b made negative</td><td>Downward shift of the entire line</td></tr>\n",
        "</table>\n",
        "</p>\n"
      ],
      "metadata": {
        "id": "RXyySle0eN35"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2. Can the class above be used to generate high dimensionial data, e.g., 2D or 3D points, or even points in nD? Write below the code of the extended class as well as the main program that tests it."
      ],
      "metadata": {
        "id": "_Ml0MykiWkkf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# The SyntheticRegressionData class already supports n-dimensional input data, thanks to how it uses torch.randn(len(w), n).\n",
        "# To make the intent clearer and more flexible for high-dimensional data (e.g., 2D, 3D, or nD points), we can explicitly update\n",
        "# the class and add comments to reflect that.\n",
        "\n",
        "import torch\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "class SyntheticRegressionDataND:\n",
        "    \"\"\"\n",
        "    Generates synthetic linear regression data in n-dimensional space.\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self):\n",
        "        self.X = None\n",
        "        self.y = None\n",
        "\n",
        "    def generate(self, w, b, mu=0.0, sigma=1.0, noise=0.01, num_train=1000):\n",
        "        \"\"\"\n",
        "        Generate data of the form: y = w^T * X + b + noise\n",
        "\n",
        "        Args:\n",
        "            w (torch.Tensor): Weight vector of shape (d,)\n",
        "            b (float): Bias term\n",
        "            mu (float): Mean of the Gaussian distribution for X\n",
        "            sigma (float): Stddev of the Gaussian distribution for X\n",
        "            noise (float): Stddev of the noise to add to y\n",
        "            num_train (int): Number of training samples\n",
        "\n",
        "        Returns:\n",
        "            X (torch.Tensor): Input tensor of shape (num_train, d)\n",
        "            y (torch.Tensor): Target tensor of shape (num_train, 1)\n",
        "        \"\"\"\n",
        "        d = len(w)\n",
        "        X = mu + sigma * torch.randn(num_train, d)\n",
        "        true_y = X @ w.reshape(d, 1) + b\n",
        "        noise_tensor = noise * torch.randn(num_train, 1)\n",
        "        y = true_y + noise_tensor\n",
        "\n",
        "        self.X = X\n",
        "        self.y = y\n",
        "        return X, y\n"
      ],
      "metadata": {
        "id": "6_cMdn9kW5Qo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Test for 2D, 3D, and nD\n",
        "def test_high_dimensional_generation():\n",
        "    generator = SyntheticRegressionDataND()\n",
        "\n",
        "    configs = [\n",
        "        {\"w\": torch.tensor([2.0, -1.0]), \"b\": 0.5, \"title\": \"2D\"},\n",
        "        {\"w\": torch.tensor([1.0, -2.0, 0.5]), \"b\": -1.0, \"title\": \"3D\"},\n",
        "        {\"w\": torch.randn(10), \"b\": 0.0, \"title\": \"10D (nD)\"},\n",
        "    ]\n",
        "\n",
        "    for cfg in configs:\n",
        "        X, y = generator.generate(w=cfg[\"w\"], b=cfg[\"b\"], num_train=1000, noise=0.1)\n",
        "        print(f\"{cfg['title']} shape of X: {X.shape}, y: {y.shape}\")\n",
        "\n",
        "        # Optional visualization for 2D and 3D\n",
        "        if len(cfg[\"w\"]) == 2:\n",
        "            plt.figure()\n",
        "            plt.scatter(X[:, 0], X[:, 1], c=y.squeeze(), cmap='viridis')\n",
        "            plt.title(f\"{cfg['title']} Data Colored by y\")\n",
        "            plt.xlabel(\"X1\")\n",
        "            plt.ylabel(\"X2\")\n",
        "            plt.colorbar(label=\"y\")\n",
        "            plt.grid(True)\n",
        "            plt.show()\n",
        "        elif len(cfg[\"w\"]) == 3:\n",
        "            from mpl_toolkits.mplot3d import Axes3D\n",
        "            fig = plt.figure()\n",
        "            ax = fig.add_subplot(111, projection='3d')\n",
        "            ax.scatter(X[:, 0], X[:, 1], X[:, 2], c=y.squeeze(), cmap='coolwarm')\n",
        "            ax.set_title(f\"{cfg['title']} Data Colored by y\")\n",
        "            ax.set_xlabel(\"X1\")\n",
        "            ax.set_ylabel(\"X2\")\n",
        "            ax.set_zlabel(\"X3\")\n",
        "            plt.show()\n",
        "\n",
        "test_high_dimensional_generation()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 945
        },
        "id": "B_JQkOgngM42",
        "outputId": "4e61db7e-3fad-4914-a658-a7b9bdc44cbe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2D shape of X: torch.Size([1000, 2]), y: torch.Size([1000, 1])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "3D shape of X: torch.Size([1000, 3]), y: torch.Size([1000, 1])\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "10D (nD) shape of X: torch.Size([1000, 10]), y: torch.Size([1000, 1])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "<h3>Output</h3>\n",
        "<p style=\"font-size:16px\">\n",
        "For 2D, you get a scatter plot with color representing y.\n",
        "\n",
        "For 3D, you get a 3D scatter plot.\n",
        "\n",
        "For nD (e.g., 10D), you just get printed shapes (e.g., (1000, 10)), since visualization is not feasible.\n",
        "</p>\n"
      ],
      "metadata": {
        "id": "3TH15xCtgf9G"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **3. Analytical solution to the linear regression problem**\n",
        "\n",
        "Since this is a linear model, the solution has an analytical form. To simplify things, we add the bias $b$ to the vector $\\textbf{W}$. Thus, in what follows, $\\textbf{W} = (w_1, \\dots, w_d, b)^\\top$. We also add the element $1$ to each vector $\\textbf{x}^i$. With this notation, the solution of the equation above, i.e., the best values of the parameters $\\textbf{W}$, is given by:\n",
        "\n",
        "$$\n",
        "\\textbf{W}^*  = (\\textbf{X} \\textbf{X}^\\top)^{-1} \\textbf{X} \\textbf{y}.\n",
        "$$\n",
        "\n",
        "In the equation above:\n",
        "- $\\textbf{X}$ is a $(d+1) \\times n$ matrix, where each column is a training sample with the value $1$ appended to it.\n",
        "- $\\textbf{X}^\\top$ means the transpose of the matrix $\\textbf{X}$.\n",
        "- The $-1$ exponent means the inverse of a matrix."
      ],
      "metadata": {
        "id": "3PdKVLn4V6dF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### **3.1. A simple implementation of the analytic solution**\n",
        "\n",
        "Using PyTorch, you are required to implement the analytical solution for the linear regression problem. We will then use the synthetic data generator we created above to test our solution."
      ],
      "metadata": {
        "id": "rBdVRILw-8bm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 1 - Generate some synthetic data\n",
        "w = torch.tensor([2.0])\n",
        "b = 4.2\n",
        "num_train = 10000000\n",
        "noise = 0 #1.2\n",
        "mu = 0\n",
        "sigma = 12\n",
        "\n",
        "data_generator = SyntheticRegressionData()\n",
        "data_generator.generate(w, b, mu=mu, sigma = sigma, noise = noise, num_train = num_train)\n",
        "\n",
        "print(\"The shape of the input data X and desired output y: \")\n",
        "print(\"Size of input X:\", data_generator.X.shape)\n",
        "print(\"Size of output y:\", data_generator.y.shape)\n",
        "\n",
        "\n",
        "# Step 2 - linear regression\n",
        "# From this data, we need to recover w and b - let's call them w_star and b_star\n",
        "# Ideally, if our model is accurate, w_start and b_star should be equal to w and b, respectively\n",
        "# The they are to w and b, the better is our solution\n",
        "\n",
        "# 2.1. Add 1 at the end of X\n",
        "ones = torch.ones(1, data_generator.n)     # a row of ones\n",
        "X = torch.cat((data_generator.X, ones), 0) # Append a row of ones to the end of data.X. So I need to transpose it\n",
        "X.shape # The shape of X now should be of size 2 x num_train\n",
        "\n",
        "\n",
        "# 2.2. The solution to the linear regression\n",
        "A = torch.matmul(X, torch.transpose(X, 0, 1))\n",
        "print(\"Size of A: \", A.size()) # A should be of size d x d.\n",
        "#print(A.size())\n",
        "\n",
        "B = torch.matmul(torch.inverse(A), X)\n",
        "print(\"Size of B: \", B.size())   # size of B should be d x n\n",
        "\n",
        "# The weights\n",
        "w_estimated = torch.matmul(B, data_generator.y)\n",
        "print(\"The weights:\")\n",
        "print(w_estimated) # should be of size 2x1\n",
        "\n",
        "# For conveniance, let's break the weighst into the weigh and bias\n",
        "w_star = w_estimated[0:-1]    # get all the elements except the last one\n",
        "b_star = w_estimated[-1:]     # last element (the bias)\n",
        "\n",
        "# print(w_estimated)\n",
        "print(\"Estimated W: \", w_star)\n",
        "print(\"Estimate b: \", b_star)\n",
        "\n",
        "# real values\n",
        "print(\"Real W: \", w)\n",
        "print(\"Real b: \", b)\n",
        "\n"
      ],
      "metadata": {
        "id": "ZQM5k4KxYk0O",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "26025923-9656-48b7-a203-c265aca9c1e6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The shape of the input data X and desired output y: \n",
            "Size of input X: torch.Size([1, 10000000])\n",
            "Size of output y: torch.Size([10000000, 1])\n",
            "Size of A:  torch.Size([2, 2])\n",
            "Size of B:  torch.Size([2, 10000000])\n",
            "The weights:\n",
            "tensor([[2.0008],\n",
            "        [4.2000]])\n",
            "Estimated W:  tensor([[2.0008]])\n",
            "Estimate b:  tensor([[4.2000]])\n",
            "Real W:  tensor([2.])\n",
            "Real b:  4.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "#### **3.2. Analysis of the solution**\n",
        "\n",
        "#### **Effect of the noise and number of samples**\n",
        "In the code above, try the followings:\n",
        "- Set the variable **noise** to $0$, and observe the results produced by the code.\n",
        "- Increase the amount of noise in the generated synthetic data, i.e., by setting the variable **noise** to larger values, and observe the results produced by the code.\n",
        "- vary the number of data elements **num_train** from a small number, e.g., 5, to a large number, e.g., 10000, and compare the results that you obtain.\n",
        "\n",
        "What can you say about the accuracy? How is it affected by these parameters and why?\n",
        "\n",
        "**Guide for Tutor:** In this question, ask the students to show you what they obtained and engage with them in the discussion. In particular, you will observe that the accuracy drops as you increase the noise. In other words:\n",
        "- When the noise is 0, the estimated W and b should be equal to the real ones.\n",
        "- When the noise increases, the estimated W and b deviate significantly from the real ones.\n",
        "\n",
        "You will also observe that the accuracy increases when you increase the number of samples.\n",
        "\n",
        "#### **Performance** ###\n",
        "\n",
        "What do you think would be the issues with the solution above? Think of:\n",
        "- The computation time: think first of what would be the issue and then test the code. You can add some code lines to check the computation time it takes to find te parameters $\\textbf{w}$ and $b$,  \n",
        "- The computation of the inverse of the matrix $\\textbf{X} \\textbf{X}^\\top$. Does the inverse always exist? If no, in which conditions it would not exist?\n",
        "\n",
        "**Guide for Tutor:**\n",
        "- The computation time will increase if you increase the dimensionality of the data - we will end up with a large matrix $\\textbf{X}$ and a large matrix $\\textbf{A = XX}^\\top$.\n",
        "- The inverse of a matrix does not always exist. In  this specific case, if we have redundant data (i.e, a data sample repeated many times), then matrix $\\textbf{A}$ will not have an inverse. Thus, it is important that each data point is unique."
      ],
      "metadata": {
        "id": "TvE31QHCzRrA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Empirical Observation of Noise and Data Size Effects\n",
        "# Setup Code (Modify and Run)\n",
        "import torch\n",
        "import time\n",
        "\n",
        "# Setup\n",
        "w = torch.tensor([2.0])\n",
        "b = 4.2\n",
        "mu = 0\n",
        "sigma = 12\n",
        "\n",
        "# Try different values\n",
        "noise_levels = [0.0, 1.0, 5.0]\n",
        "sample_sizes = [5, 100, 10000]\n",
        "\n",
        "for noise in noise_levels:\n",
        "    for num_train in sample_sizes:\n",
        "        print(f\"\\n--- Noise: {noise}, Num Samples: {num_train} ---\")\n",
        "        # Step 1: Generate data\n",
        "        data_generator = SyntheticRegressionData()\n",
        "        data_generator.generate(w, b, mu=mu, sigma=sigma, noise=noise, num_train=num_train)\n",
        "\n",
        "        # Step 2: Prepare data\n",
        "        ones = torch.ones(1, data_generator.n)\n",
        "        X = torch.cat((data_generator.X, ones), 0)\n",
        "\n",
        "        # Step 3: Estimate parameters\n",
        "        start_time = time.time()\n",
        "        A = torch.matmul(X, torch.transpose(X, 0, 1))\n",
        "        try:\n",
        "            B = torch.matmul(torch.inverse(A), X)\n",
        "            w_estimated = torch.matmul(B, data_generator.y)\n",
        "            w_star = w_estimated[0:-1]\n",
        "            b_star = w_estimated[-1:]\n",
        "\n",
        "            elapsed = time.time() - start_time\n",
        "            print(f\"Estimated w: {w_star.item():.4f}, b: {b_star.item():.4f}\")\n",
        "            print(f\"True w: {w.item():.4f}, b: {b:.4f}\")\n",
        "            print(f\"Estimation error: w_error = {abs(w_star.item() - w.item()):.4e}, b_error = {abs(b_star.item() - b):.4e}\")\n",
        "            print(f\"Computation time: {elapsed:.4f} seconds\")\n",
        "\n",
        "        except RuntimeError as e:\n",
        "            print(\"Matrix inversion failed:\", str(e))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qGELaCcsp1VR",
        "outputId": "d2454cfd-3d52-4d80-8383-a43b7b60592a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "--- Noise: 0.0, Num Samples: 5 ---\n",
            "Estimated w: 2.0000, b: 4.2000\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 1.1921e-07, b_error = 6.6757e-07\n",
            "Computation time: 0.0005 seconds\n",
            "\n",
            "--- Noise: 0.0, Num Samples: 100 ---\n",
            "Estimated w: 2.0000, b: 4.2000\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 1.1921e-07, b_error = 2.8610e-07\n",
            "Computation time: 0.0002 seconds\n",
            "\n",
            "--- Noise: 0.0, Num Samples: 10000 ---\n",
            "Estimated w: 2.0000, b: 4.2000\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 1.1921e-07, b_error = 7.6294e-07\n",
            "Computation time: 0.0002 seconds\n",
            "\n",
            "--- Noise: 1.0, Num Samples: 5 ---\n",
            "Estimated w: 2.0229, b: 4.3281\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 2.2889e-02, b_error = 1.2811e-01\n",
            "Computation time: 0.0002 seconds\n",
            "\n",
            "--- Noise: 1.0, Num Samples: 100 ---\n",
            "Estimated w: 1.9956, b: 4.2672\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 4.3955e-03, b_error = 6.7176e-02\n",
            "Computation time: 0.0002 seconds\n",
            "\n",
            "--- Noise: 1.0, Num Samples: 10000 ---\n",
            "Estimated w: 1.9995, b: 4.2027\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 4.6086e-04, b_error = 2.7245e-03\n",
            "Computation time: 0.0001 seconds\n",
            "\n",
            "--- Noise: 5.0, Num Samples: 5 ---\n",
            "Estimated w: 1.9400, b: 6.5426\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 5.9988e-02, b_error = 2.3426e+00\n",
            "Computation time: 0.0001 seconds\n",
            "\n",
            "--- Noise: 5.0, Num Samples: 100 ---\n",
            "Estimated w: 1.9216, b: 3.8071\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 7.8359e-02, b_error = 3.9291e-01\n",
            "Computation time: 0.0001 seconds\n",
            "\n",
            "--- Noise: 5.0, Num Samples: 10000 ---\n",
            "Estimated w: 2.0059, b: 4.1457\n",
            "True w: 2.0000, b: 4.2000\n",
            "Estimation error: w_error = 5.8737e-03, b_error = 5.4270e-02\n",
            "Computation time: 0.0001 seconds\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Observation\n",
        "### Accuracy vs. Noise\n",
        "| Noise Level | Estimation Behavior                              |\n",
        "| ----------- | ------------------------------------------------ |\n",
        "| `0.0`       | Perfect recovery of `w` and `b` (no disturbance) |\n",
        "| `> 0.0`     | Estimation degrades with higher noise levels     |\n",
        "\n",
        "### Accuracy vs. Number of Samples\n",
        "| Sample Size | Estimation Behavior                            |\n",
        "| ----------- | ---------------------------------------------- |\n",
        "| `5`         | Poor accuracy, sensitive to noise and outliers |\n",
        "| `100`       | Better estimation                              |\n",
        "| `10000`     | Very accurate, robust against noise            |\n",
        "\n",
        "More data averages out of the noise and leads to more stable parameter estimates."
      ],
      "metadata": {
        "id": "9qTXAVqdqHar"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Performance & Numerical Stability\n",
        "### Computation Time\n",
        "\n",
        "\n",
        "*   Increases **linearly** with number of samples\n",
        "*   Increases **significantly** with number of dimensions (due to matrix size)\n",
        "*   You can test by timing run for d = 10, 100, 1000.\n"
      ],
      "metadata": {
        "id": "KcPLWtHGsN7l"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Example: Test higher dimensional input\n",
        "w = torch.randn(1000)\n",
        "X = torch.randn(1000, 10000)\n",
        "A = torch.matmul(X, X.t())\n",
        "\n",
        "print(w)\n",
        "print(X)\n",
        "print(A)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "agmbbEL7tIMk",
        "outputId": "81fbc400-e24d-4085-a448-d345d4dd40d5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "tensor([ 1.6024e+00,  7.0659e-02, -1.0792e+00,  2.5750e+00, -2.0807e-01,\n",
            "         1.4740e-02,  4.5316e-01, -1.4982e-01, -3.5795e-01,  1.3031e+00,\n",
            "         1.1003e+00, -7.5396e-01, -2.5625e+00,  1.7524e+00,  5.2558e-02,\n",
            "        -1.0781e+00,  5.2246e-01,  1.0779e-03, -4.5668e-01, -1.0687e+00,\n",
            "         8.4041e-02,  9.3542e-01,  7.8039e-01,  4.1079e-01,  8.3052e-01,\n",
            "         2.9084e-01,  6.8079e-02, -3.9826e-01, -1.9793e+00,  1.4161e-01,\n",
            "         1.5869e+00, -3.5437e-02, -1.5969e+00, -2.3931e+00,  9.6563e-01,\n",
            "         4.4024e-01, -1.7994e+00,  3.7422e-02,  7.2720e-01,  2.3702e-01,\n",
            "        -3.0373e-01,  2.3005e+00, -1.0385e+00, -4.6802e-01,  3.2519e-01,\n",
            "         1.3681e+00, -1.0102e+00,  2.3103e+00,  7.1964e-02, -3.1209e-02,\n",
            "        -1.2452e+00, -4.0605e-01,  1.5359e+00, -2.3904e+00, -1.5202e+00,\n",
            "         3.7362e-01, -9.5971e-01, -2.4197e+00,  1.6368e-01, -3.4056e-01,\n",
            "        -1.5876e+00,  5.1393e-01, -4.8415e-02, -7.3674e-01, -2.3757e+00,\n",
            "         3.7497e-01,  7.0159e-01, -8.8912e-01,  8.6493e-01,  9.3596e-01,\n",
            "         5.3371e-01, -1.3935e-01, -1.2949e+00, -1.4631e+00,  6.1399e-01,\n",
            "         9.1194e-01,  1.8217e-01, -1.6614e+00, -3.7398e-02,  3.5130e+00,\n",
            "         2.7231e-01, -2.1326e+00,  1.6695e+00, -1.0639e+00,  1.6289e+00,\n",
            "         6.1362e-01, -5.6562e-01, -1.9677e+00, -2.3235e+00,  1.9383e+00,\n",
            "         4.1761e-01,  1.7505e-01,  2.3330e-01,  1.4685e+00, -2.1390e+00,\n",
            "        -5.7980e-01,  6.5805e-01,  4.8652e-01,  4.4237e-01, -5.7881e-01,\n",
            "        -3.1430e-01, -1.5820e+00,  1.1276e+00, -3.6104e+00, -1.3824e+00,\n",
            "         6.6741e-01, -1.0363e+00,  1.1184e+00, -2.5712e-01,  9.0371e-01,\n",
            "         1.3448e+00,  8.8826e-01, -9.6846e-01, -9.8089e-01,  1.8854e+00,\n",
            "         1.3406e+00,  4.6433e-01,  4.3977e-01, -3.8397e-01, -7.0332e-01,\n",
            "         3.2108e-01,  1.3315e+00, -1.2157e+00, -1.2394e+00, -5.3949e-01,\n",
            "        -2.0306e+00, -4.8941e-01, -6.5676e-01,  1.7989e-02,  3.5505e-01,\n",
            "        -9.3977e-01, -6.1363e-01,  4.3991e-01, -1.2822e+00,  3.0865e-01,\n",
            "        -1.1516e+00, -6.5021e-01, -1.3819e+00, -4.4436e-01,  1.3919e+00,\n",
            "        -7.6376e-01,  2.2446e-02,  1.0397e+00,  6.5501e-01,  6.4010e-01,\n",
            "         7.7557e-02, -6.3384e-01, -2.4930e-01,  2.5020e-01,  2.1585e+00,\n",
            "        -1.1875e-02,  2.7865e-01,  2.5768e-01, -3.3942e-01, -2.4307e-01,\n",
            "         1.7809e+00,  1.3026e+00, -5.9340e-01, -2.7427e-01,  9.8325e-01,\n",
            "        -2.1594e-01, -8.7193e-01, -7.6806e-01,  7.5794e-01,  9.4353e-01,\n",
            "        -8.0983e-01,  1.3554e+00,  5.1258e-01,  7.1479e-03,  2.5101e-01,\n",
            "         1.3331e-01, -1.3379e+00, -9.8626e-02, -1.2382e+00,  5.7086e-01,\n",
            "        -9.2285e-01, -2.8111e-01, -1.9718e-01, -6.5739e-01, -5.7032e-01,\n",
            "         1.0537e+00, -3.2303e-01, -2.6276e-01, -1.8062e+00,  1.4476e-01,\n",
            "         1.6556e-01,  4.7062e-01, -8.1173e-02,  3.8344e+00,  4.8782e-02,\n",
            "        -1.2423e-01, -1.0769e+00,  1.4942e+00,  9.3520e-01,  9.8791e-01,\n",
            "        -1.5270e+00,  2.9599e-01,  2.2915e+00,  2.5616e-01,  7.1331e-01,\n",
            "        -6.5766e-01, -5.6315e-01,  1.1113e-01, -9.2952e-01, -3.8690e-01,\n",
            "         1.5576e-03, -1.2326e-01,  6.0817e-01, -1.3383e+00,  1.0811e-01,\n",
            "        -9.2621e-01, -2.6873e-01, -1.1570e+00, -3.4288e-02,  7.4476e-01,\n",
            "         1.3681e-02, -5.3856e-01, -2.9708e+00, -1.8923e+00, -8.5863e-02,\n",
            "        -8.8868e-01, -1.2404e-01, -1.6454e+00, -1.1636e+00, -5.8667e-01,\n",
            "         3.5358e-01,  2.2612e+00,  1.1050e-02,  4.3773e-01, -2.6471e-02,\n",
            "         1.2433e+00,  1.2769e+00,  1.5812e+00, -1.6584e+00, -2.0749e-01,\n",
            "        -8.2357e-01,  1.3241e+00,  1.5415e+00,  4.3974e-01,  1.1362e+00,\n",
            "         4.2488e-01, -2.2802e+00,  1.6693e+00,  4.7512e-02,  6.0203e-01,\n",
            "        -1.1226e+00,  1.7592e+00, -3.6700e-01,  8.2224e-01,  4.9461e-01,\n",
            "        -5.3533e-02, -2.9083e-01, -4.7601e-01, -3.1639e-01,  1.9069e+00,\n",
            "         6.0957e-01, -2.2849e-01,  8.3756e-01,  6.8979e-02,  2.2694e-01,\n",
            "         1.0838e+00, -6.9908e-01,  3.8523e-01, -9.2682e-01, -9.2787e-01,\n",
            "        -3.2470e-01, -2.8854e-01,  1.8145e+00,  1.5469e+00, -3.9069e-01,\n",
            "         4.8233e-01,  2.2943e-01, -1.7943e+00,  2.2906e+00, -1.6616e-01,\n",
            "         1.2244e-01, -1.0742e+00, -1.2441e+00,  1.2780e+00,  1.2289e+00,\n",
            "         1.0768e+00,  1.4863e+00,  8.0963e-01, -7.4429e-01, -5.4365e-01,\n",
            "        -8.9497e-01,  1.1812e-02, -4.3548e-01,  3.4721e-01,  1.4622e+00,\n",
            "         1.3932e-01, -7.2614e-01,  4.1563e-01, -1.2631e+00, -1.3335e+00,\n",
            "         5.4902e-01, -2.6169e-01,  8.0397e-01,  1.1420e+00,  1.9983e-01,\n",
            "        -8.7261e-01,  4.9700e-01,  6.3469e-01,  1.3877e-01, -1.2035e+00,\n",
            "         4.1160e-01, -3.0649e-01,  2.0719e+00,  1.4887e+00, -3.8486e-03,\n",
            "        -1.8124e-01,  1.8587e+00,  8.5182e-01,  8.7176e-02,  1.4450e+00,\n",
            "         5.4269e-01,  5.2463e-02,  4.2315e-01, -1.1556e-01,  4.7778e-01,\n",
            "        -1.4822e+00, -1.0787e+00,  6.6843e-01, -7.7073e-01, -2.9088e-01,\n",
            "        -1.9855e+00, -7.6136e-01, -8.6666e-01, -8.1960e-01,  4.1324e-01,\n",
            "        -8.7615e-01,  3.0021e-01,  5.2726e-01,  7.6584e-01, -2.4571e-01,\n",
            "        -1.1277e+00, -6.5817e-01,  1.1192e+00,  1.6392e+00, -1.2175e-01,\n",
            "        -7.3223e-01,  4.3358e-01,  1.5785e+00, -1.6028e-01, -4.4778e-01,\n",
            "        -3.1802e-01, -1.5647e-01, -9.3899e-01, -9.3247e-01, -1.8066e-01,\n",
            "        -4.3554e-01, -1.0819e+00,  1.1071e-02, -1.0972e+00,  3.5478e-01,\n",
            "        -7.0875e-01, -2.0514e+00,  1.0461e+00, -1.2575e+00, -2.5659e-01,\n",
            "        -7.4708e-01,  5.1712e-01,  5.5260e-01,  9.4358e-01, -5.0733e-02,\n",
            "         4.0608e-01, -1.4906e+00, -7.8565e-01,  2.3814e-01, -5.5270e-01,\n",
            "         9.5795e-01,  9.6050e-01, -5.4410e-01, -8.8049e-01,  1.2113e-01,\n",
            "         1.7927e+00, -1.6491e+00,  1.8441e+00,  1.4410e+00, -9.3367e-02,\n",
            "         5.2933e-01,  7.5345e-01, -8.9071e-01, -1.3003e+00,  1.0687e+00,\n",
            "        -8.5887e-01,  1.4417e+00,  1.8289e+00, -4.7590e-01,  6.9350e-01,\n",
            "         1.1817e+00,  2.3670e-01,  7.6019e-01, -1.9932e-01,  5.0472e-03,\n",
            "        -3.4894e-01,  9.1014e-01,  1.8858e-01,  7.0304e-01,  1.1526e+00,\n",
            "         4.2433e-01, -1.0706e-01,  1.5876e-01, -2.6528e-01,  1.0508e+00,\n",
            "        -1.2148e+00, -2.6278e-01, -2.3230e-01, -1.1187e-01,  1.6152e-01,\n",
            "        -4.5546e-01,  1.3615e+00,  2.0167e+00, -1.5412e+00, -1.5743e+00,\n",
            "         1.3262e+00,  1.1904e-01,  1.6712e+00, -6.8919e-01,  7.1592e-01,\n",
            "         1.6298e-01, -6.3978e-01, -7.4207e-01,  6.0926e-01,  6.4031e-01,\n",
            "        -3.1883e-01, -4.4117e-01, -8.1879e-01, -7.1962e-01, -7.1917e-01,\n",
            "         2.4046e-01,  5.8221e-01,  7.3465e-02,  7.6145e-01, -4.5281e-01,\n",
            "        -2.8254e-01, -6.9140e-01, -2.5622e+00, -3.6377e-01, -1.5619e+00,\n",
            "         6.1631e-01, -8.1362e-01, -3.4383e-01, -1.4240e-02, -1.6793e+00,\n",
            "        -4.4615e-01, -1.3720e+00,  1.7750e-01,  5.8393e-01,  1.4414e+00,\n",
            "         9.3405e-01, -4.5332e-01, -1.6591e+00,  8.0649e-01,  2.0797e-01,\n",
            "         1.6227e+00, -1.0500e+00,  1.2746e+00, -2.3912e-01, -6.0284e-02,\n",
            "        -5.9931e-01,  8.8774e-01, -1.7738e+00, -1.1949e+00, -6.9823e-01,\n",
            "         8.1778e-01,  1.0678e+00,  5.1120e-01,  1.7308e+00, -4.6090e-01,\n",
            "        -1.2857e+00,  1.9863e-01, -1.0304e+00,  1.9070e-01, -3.2275e-01,\n",
            "         1.0619e-01, -2.0842e-01, -2.5257e-01, -1.2079e+00,  1.3432e+00,\n",
            "        -2.0960e-01, -8.4826e-01, -1.3044e+00,  3.8245e-01, -3.7509e-01,\n",
            "        -5.7309e-01,  1.3091e+00, -1.6177e+00, -1.7700e+00, -2.6051e-01,\n",
            "        -1.3223e+00,  1.0763e+00,  3.1703e-01, -2.5094e-02, -6.7197e-01,\n",
            "         3.4891e-01, -1.7397e-01,  1.3983e+00, -4.1398e-02,  3.1482e-01,\n",
            "        -5.0026e-01,  2.0831e+00, -1.4590e+00, -4.6482e-01, -2.1920e-01,\n",
            "         1.6845e+00, -5.3165e-01,  1.7930e+00,  9.0319e-01,  7.5108e-01,\n",
            "         6.4060e-02, -2.9542e-01, -1.3286e+00, -4.4105e-01,  6.6260e-01,\n",
            "        -2.7150e-04, -1.0195e+00, -1.1636e+00, -6.9266e-01,  2.0910e+00,\n",
            "         1.3122e+00,  1.7638e+00, -4.8949e-01,  1.5585e+00, -4.6669e-01,\n",
            "        -4.8626e-01,  1.0084e+00, -1.2195e+00,  1.1306e+00,  2.7448e-01,\n",
            "         7.9277e-02,  3.8774e-01, -1.0386e+00, -7.3493e-01, -1.1038e+00,\n",
            "         9.1158e-01,  1.6517e-01, -6.8732e-01,  3.9009e-02, -5.5533e-01,\n",
            "         1.3599e+00,  1.4362e-01, -9.8814e-01, -4.8881e-01, -1.7081e+00,\n",
            "         5.3471e-01,  2.9054e+00, -7.5415e-01, -1.5473e+00,  4.7312e-01,\n",
            "        -1.2852e-01, -7.1818e-01, -1.2785e+00, -1.1548e+00, -4.6048e-01,\n",
            "        -1.0260e+00, -9.4530e-01, -2.5502e+00,  2.5781e-01,  2.0722e+00,\n",
            "        -4.9509e-01,  4.6358e-02, -2.4763e-01,  5.7039e-01, -2.9982e-01,\n",
            "         2.9158e-01,  3.2460e-02,  5.0845e-01,  4.2822e-01, -4.8270e-01,\n",
            "         2.8413e-02,  3.3243e-01, -9.5086e-01,  1.6276e+00, -8.7433e-01,\n",
            "        -5.1297e-01,  1.7671e+00,  1.0208e+00,  1.1550e+00,  5.3926e-01,\n",
            "        -1.8182e+00,  3.5670e-01,  1.2148e+00,  4.2072e-01,  2.9433e-01,\n",
            "         9.7610e-01, -2.3360e-01,  6.8490e-01,  7.0250e-01,  4.5028e-01,\n",
            "        -1.0972e+00, -8.9706e-01, -9.4518e-01,  6.0704e-02, -2.6055e-01,\n",
            "         1.1427e+00,  9.9648e-01,  1.0375e+00,  9.9024e-01, -1.3329e+00,\n",
            "        -6.4602e-01,  5.7510e-01,  1.0608e+00, -1.0820e+00, -2.6620e-01,\n",
            "        -6.7973e-01, -1.0929e+00, -1.1823e+00,  1.1085e-01, -5.0733e-01,\n",
            "         3.3589e-02,  2.3964e+00, -6.9195e-01,  1.8045e+00, -3.9081e-01,\n",
            "         1.9883e+00,  1.6779e+00,  3.5838e-01,  5.2399e-01,  2.1946e-01,\n",
            "         1.8570e+00,  1.2515e+00, -7.8045e-01, -5.3582e-01,  5.1657e-01,\n",
            "        -1.2892e+00,  5.9575e-01, -1.3338e-01,  1.2962e+00,  4.9355e-01,\n",
            "        -1.5531e+00,  1.4518e+00,  3.3935e-01,  1.4264e+00, -2.1646e-01,\n",
            "        -6.5739e-01,  9.8048e-01, -4.0568e-01, -1.2380e+00, -1.3732e+00,\n",
            "        -4.9237e-01, -8.2439e-01,  1.0388e+00, -4.1094e-01,  1.0169e+00,\n",
            "        -1.3837e+00, -5.7933e-01,  1.3605e-01, -1.1713e-01, -3.4773e-01,\n",
            "         9.9556e-01,  4.0193e-01,  1.5113e+00,  7.9632e-01,  3.7249e-01,\n",
            "         2.6970e+00, -4.5656e-01,  5.2105e-01,  5.9753e-01, -3.8188e-02,\n",
            "         9.8166e-01,  1.5414e+00,  5.5799e-01,  1.9423e+00, -1.3372e+00,\n",
            "        -7.5106e-01, -1.0368e-01,  1.4428e+00,  1.8000e+00, -5.2143e-01,\n",
            "         6.6695e-01, -6.7583e-01, -5.6212e-01, -4.5449e-01,  6.5577e-01,\n",
            "        -7.6986e-01,  1.5270e+00,  1.2516e+00,  1.2584e+00,  1.4767e+00,\n",
            "        -3.0831e-01, -8.0226e-01,  2.0428e-02,  3.1266e-02, -4.7873e-01,\n",
            "         2.5197e-01,  8.0158e-01,  1.9934e-02,  1.9739e-01,  1.9982e+00,\n",
            "         2.6934e-01,  7.6090e-01,  1.0928e+00, -1.2153e+00,  8.7062e-02,\n",
            "         4.9026e-01,  1.3021e-01, -1.0673e+00,  7.6524e-01, -6.8754e-01,\n",
            "        -2.5832e-01, -4.4008e-01, -2.3047e-01,  1.2230e+00,  2.6001e-01,\n",
            "         7.6093e-01,  1.7896e+00,  2.0596e+00,  2.7121e-01,  1.2101e-01,\n",
            "         3.6366e-01, -8.4579e-01, -6.7448e-01,  3.1338e-01,  2.8230e-01,\n",
            "        -9.4945e-01,  5.1228e-01,  2.1787e+00, -9.2802e-01, -7.2435e-01,\n",
            "         3.0024e-01,  8.8278e-01, -1.5187e-01,  1.4649e+00, -6.9010e-01,\n",
            "         1.1656e+00, -8.1105e-01, -3.8061e-01,  6.1378e-02,  1.4150e+00,\n",
            "         1.0956e+00,  1.5222e+00, -1.2255e+00,  4.3842e-01, -1.7123e+00,\n",
            "        -5.6343e-02, -7.5827e-02,  1.0149e+00,  1.0181e+00, -7.7717e-01,\n",
            "        -4.7324e-01, -4.8248e-01,  1.4056e+00,  8.7099e-03,  5.4494e-01,\n",
            "        -8.2433e-01, -7.6159e-01, -4.4236e-01,  6.8635e-01,  2.0735e+00,\n",
            "         2.3878e+00, -1.9578e-01,  6.0353e-01,  6.2430e-01, -9.2931e-02,\n",
            "        -1.4434e+00,  1.1038e+00,  1.6195e+00, -1.6994e-01, -3.8089e-01,\n",
            "        -1.0225e+00, -5.1235e-01,  1.1508e+00, -1.2001e+00, -1.0315e+00,\n",
            "         2.3418e+00,  1.4467e+00,  1.0772e+00,  1.2938e+00, -2.0629e-01,\n",
            "        -5.9300e-01, -1.0171e+00,  2.0380e+00,  8.2500e-01, -1.6009e-01,\n",
            "        -5.6762e-01, -1.9649e-02,  1.7055e+00, -1.4072e+00, -1.1717e+00,\n",
            "         1.3006e+00,  1.1673e+00,  1.3599e+00,  5.7967e-01, -2.3037e-01,\n",
            "         1.9589e+00, -5.4366e-01, -2.3290e-01,  1.6611e+00,  1.2602e+00,\n",
            "         1.4007e-01, -3.4685e-01, -1.4611e-01, -5.6698e-01, -1.1104e+00,\n",
            "        -1.6913e+00,  4.9991e-02, -6.7924e-01, -1.4696e+00, -9.2817e-01,\n",
            "        -3.1741e-01,  7.2815e-01, -3.0206e-01, -3.4292e-01,  1.0504e+00,\n",
            "        -1.3810e-01,  1.9051e-01,  1.3069e+00,  1.0011e+00, -1.0933e+00,\n",
            "         4.3446e-01, -7.4715e-01,  1.0613e+00,  3.2404e-02, -9.3006e-01,\n",
            "        -1.9729e+00, -5.0018e-01, -3.9643e-01, -4.1836e-01, -9.5836e-01,\n",
            "         4.8916e-01,  9.4893e-01,  2.4599e+00, -1.4615e+00, -1.1833e+00,\n",
            "         5.6763e-01, -5.4604e-02, -3.6308e-01, -1.7627e+00, -9.9471e-02,\n",
            "        -7.0888e-01, -2.3798e-01,  2.3034e-01, -3.8191e-02, -8.8200e-01,\n",
            "         8.8789e-02,  6.8150e-01, -7.8670e-01, -1.6287e+00, -6.1518e-01,\n",
            "         4.1686e-01,  1.5611e+00,  1.6840e-01, -4.0287e-01, -4.3650e-01,\n",
            "        -5.9155e-01,  6.8486e-01,  4.7202e-01,  4.0096e-02, -3.3698e-02,\n",
            "         1.0232e+00,  3.6340e-01, -6.3904e-01, -3.9105e-01, -5.7430e-02,\n",
            "        -5.0531e-01,  8.4050e-01, -2.7985e+00,  7.1315e-01, -8.4653e-02,\n",
            "        -4.5588e-01,  3.4595e-01,  3.0208e+00, -9.2779e-01,  8.9498e-01,\n",
            "        -2.1602e+00, -7.5451e-01, -7.6828e-01,  2.8861e-01,  1.9705e-02,\n",
            "        -1.7805e-01,  1.5219e+00,  1.8045e+00,  3.7453e-01, -1.6396e+00,\n",
            "         1.7438e+00, -9.1841e-01, -1.8383e-01, -2.0736e+00,  1.1508e+00,\n",
            "        -1.2793e+00,  8.5357e-01,  6.4151e-02,  8.1813e-01, -1.2055e+00,\n",
            "         1.2444e+00, -2.9368e-01,  1.7848e+00, -1.9097e+00,  8.2289e-01,\n",
            "         7.8306e-01, -1.3580e+00,  2.8888e-01, -1.7253e+00, -2.4014e-01,\n",
            "         7.1751e-01, -3.1266e-01,  1.5683e+00, -6.9041e-01, -3.3698e-01,\n",
            "        -4.2230e-01, -1.8960e+00,  1.4565e-01,  5.2500e-02, -7.6384e-01,\n",
            "         5.8174e-01,  3.0492e-01,  3.1944e-01,  1.4102e+00,  1.1091e+00,\n",
            "        -6.2046e-01,  3.2393e-01, -1.1308e+00,  7.9583e-02, -7.0386e-01,\n",
            "        -5.4268e-01,  1.8532e+00, -8.1169e-01, -2.0596e-01, -6.0122e-01,\n",
            "        -2.6795e-01,  4.8012e-02,  8.3028e-02, -6.4968e-01,  2.1094e+00,\n",
            "        -8.4268e-01, -6.5125e-01, -1.2777e+00, -9.9165e-01, -7.1395e-01,\n",
            "         4.5819e-01, -6.8222e-01, -3.4848e-01, -1.0125e+00, -1.4330e+00,\n",
            "        -1.1070e-01, -3.4527e+00,  2.7443e-01,  7.5122e-01, -1.1861e+00,\n",
            "        -7.7266e-01, -1.0423e+00, -1.9961e+00,  1.7150e-01,  4.9503e-01,\n",
            "         1.7779e+00,  2.5030e-01,  5.0389e-01, -6.1136e-02,  3.3829e-01,\n",
            "         4.0227e-01, -7.5273e-01,  1.5486e+00, -7.1003e-01, -8.5721e-02,\n",
            "        -6.8330e-01, -6.2865e-01, -7.7503e-01, -1.4130e+00, -9.4792e-02,\n",
            "         3.1059e-01,  3.9089e-01, -5.4834e-01, -9.4263e-01, -2.4055e+00,\n",
            "        -8.6272e-02,  1.1822e+00,  6.9839e-01,  1.1469e+00,  7.7453e-01,\n",
            "         1.6534e+00,  1.8477e+00, -4.2978e-01, -2.7886e-01,  3.4875e-01,\n",
            "         1.2453e+00, -2.1094e+00,  2.4540e-02, -1.6929e+00,  2.0451e+00,\n",
            "         1.1496e+00, -1.1303e-01,  8.4536e-01,  1.7479e-01,  1.4370e+00,\n",
            "        -2.8966e-01, -7.8475e-01, -6.4635e-01, -6.1599e-01, -8.9677e-01,\n",
            "        -2.7809e-01, -8.6750e-02,  1.4669e+00,  1.9123e+00,  4.7183e-01,\n",
            "         4.9108e-01, -6.9387e-01,  3.2271e-01, -4.0106e-01, -2.6779e-01])\n",
            "tensor([[-0.2556, -0.2366,  0.6342,  ..., -1.1091, -0.2426, -1.3905],\n",
            "        [ 1.4267,  1.4196, -0.2510,  ...,  0.3612, -0.1772,  0.5630],\n",
            "        [-1.1265,  0.3063,  0.4990,  ...,  0.0868,  0.8760, -0.8534],\n",
            "        ...,\n",
            "        [ 0.8669,  2.0952, -0.9258,  ...,  0.9796, -0.8348, -0.2066],\n",
            "        [ 0.6882,  1.2053,  0.3909,  ..., -0.3116, -0.9759, -1.3843],\n",
            "        [ 1.4585, -0.5822, -0.5317,  ...,  0.7519,  0.2078, -0.0861]])\n",
            "tensor([[10338.3076,  -184.7048,  -107.1924,  ...,   -97.5761,   135.5602,\n",
            "            36.8014],\n",
            "        [ -184.7048,  9850.5225,    44.6189,  ...,  -155.8443,   -15.2640,\n",
            "            15.7171],\n",
            "        [ -107.1924,    44.6189, 10029.4023,  ...,    29.1022,    31.6512,\n",
            "          -108.4156],\n",
            "        ...,\n",
            "        [  -97.5761,  -155.8443,    29.1022,  ...,  9691.1855,   -70.7986,\n",
            "            33.0322],\n",
            "        [  135.5602,   -15.2640,    31.6512,  ...,   -70.7986, 10024.1436,\n",
            "            83.2634],\n",
            "        [   36.8014,    15.7171,  -108.4156,  ...,    33.0322,    83.2634,\n",
            "         10060.0986]])\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Matrix Iversion Issues\n",
        "\n",
        "*  Matrix A = XX<sup>T</sup> **must be invertible**\n",
        "*  It may fail when:\n",
        "   - Rows of X are linearly dependent (e.g., duplicated data)\n",
        "   - The number of features exceeds the number of samples\n",
        "\n",
        "### Remedies\n",
        "\n",
        "\n",
        "*   Use torch.pinverse(X) instead of torch.inverse(...)\n",
        "*   Use gradient descent instead of closed-form solution\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "FLoSFCWMuA5S"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### **3.3. A Practical problem**\n",
        "\n",
        " We would like to write a code that predicts house prices based on their land **area** and **age**. We assume that the house price is a linear function of **area** and **age**.\n",
        "\n",
        "Use the classes you created above to solve this problem. To test your solution, use the synthetic data generator class to simulate some data. For example, you can simulate data by calling the class **SyntheticRegressionData** with the parameters $w_1 = 100, w_2 = -5, b=100$.\n",
        "\n",
        "Make sure you make the necessary changes to the solution above in order to solve this problem. However, when you make changes, make sure that the classes also work for the previous problem."
      ],
      "metadata": {
        "id": "WiCXDoJDyi0i"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import torch\n",
        "\n",
        "class SyntheticRegressionDataND:\n",
        "    \"\"\"\n",
        "    Generates synthetic linear regression data in n dimensions.\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self):\n",
        "        self.X = None\n",
        "        self.y = None\n",
        "        self.n = 0\n",
        "\n",
        "    def generate(self, w, b, mu=0.0, sigma=1.0, noise=0.01, num_train=1000):\n",
        "        \"\"\"\n",
        "        Generate data y = w^T X + b + noise\n",
        "\n",
        "        Args:\n",
        "            w (torch.Tensor): weight vector of size (d,)\n",
        "            b (float): bias\n",
        "            mu (float): mean of Gaussian distribution for X\n",
        "            sigma (float): stddev of Gaussian\n",
        "            noise (float): noise level\n",
        "            num_train (int): number of training samples\n",
        "        \"\"\"\n",
        "        d = len(w)\n",
        "        self.n = num_train\n",
        "        self.X = mu + sigma * torch.randn(num_train, d)\n",
        "        true_y = self.X @ w.reshape(d, 1) + b\n",
        "        noise_tensor = noise * torch.randn(num_train, 1)\n",
        "        self.y = true_y + noise_tensor\n",
        "        return self.X, self.y\n"
      ],
      "metadata": {
        "id": "tdpqXfkc7uei"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Main Code: Predict House Price from Area and Age\n",
        "import time\n",
        "\n",
        "# 1. Ground truth weights and bias for house price model\n",
        "# price = 100 * area - 5 * age + 100\n",
        "w_true = torch.tensor([100.0, -5.0])  # weights for [area, age]\n",
        "b_true = 100.0\n",
        "noise = 0.0\n",
        "num_train = 1000\n",
        "\n",
        "# 2. Generate synthetic data\n",
        "generator = SyntheticRegressionDataND()\n",
        "X, y = generator.generate(w=w_true, b=b_true, noise=noise, num_train=num_train)\n",
        "\n",
        "# 3. Add a column of ones for the bias\n",
        "ones = torch.ones((num_train, 1))\n",
        "X_aug = torch.cat((X, ones), dim=1)  # shape (n, d+1)\n",
        "\n",
        "# 4. Solve for weights using normal equation\n",
        "start_time = time.time()\n",
        "A = X_aug.T @ X_aug\n",
        "B = X_aug.T @ y\n",
        "\n",
        "try:\n",
        "    theta = torch.inverse(A) @ B  # theta contains [w1, w2, b]\n",
        "    elapsed = time.time() - start_time\n",
        "\n",
        "    w_est = theta[:-1].reshape(-1)\n",
        "    b_est = theta[-1].item()\n",
        "\n",
        "    # 5. Output results\n",
        "    print(f\"Estimated weights: {w_est}\")\n",
        "    print(f\"Estimated bias: {b_est:.4f}\")\n",
        "    print(f\"True weights:     {w_true}\")\n",
        "    print(f\"True bias:        {b_true}\")\n",
        "    print(f\"Computation time: {elapsed:.4f} seconds\")\n",
        "except RuntimeError as e:\n",
        "    print(\"Matrix inversion failed:\", str(e))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Jh5STU556AZS",
        "outputId": "c50888a6-a81d-4637-a885-2ec57354e494"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Estimated weights: tensor([100.0001,  -5.0000])\n",
            "Estimated bias: 99.9999\n",
            "True weights:     tensor([100.,  -5.])\n",
            "True bias:        100.0\n",
            "Computation time: 0.0467 seconds\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **4. A better implementation**\n",
        "\n",
        "In the code above, we implemented the synthetic data generator as a class but the linear regression solver as part of the main code. In this exercise, let's also implement the solver as a class.\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "FPOaDtN916FZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### **4.1. The Model**\n",
        "\n",
        "To do so, we will create a class called **LinearRegression**. It will have at least the following methods as members:\n",
        "- The weights $\\textbf{W}$ and bias $b$. When the class is created, these weights will be initialized to random values. Note that, in the current solution, these weights can be initialized to $0$. We will show later when using the general soluution, that initializing to $0$ is not a good idea.\n",
        "- The method **forward**, which takes $\\textbf{X}$ and computes its output $y$."
      ],
      "metadata": {
        "id": "6x0XDvT2UvSl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class LinearRegression:\n",
        "  def __init__(self, d=1):\n",
        "\n",
        "    self.dim = d  # dimension of the data\n",
        "\n",
        "    # Set the weights to random values from normal distribution of mean 0 and std 0.01\n",
        "    self.w = torch.randn(self.dim, 1) * 0.01\n",
        "    self.b = torch.randn(1, 1) * 0.01         # the bias\n",
        "\n",
        "  # The forward function, which computes y for a given X\n",
        "  def forward(self, X):\n",
        "    self.y = torch.matmul(w.reshape((-1, 1)), self.X) + b\n",
        "    return y\n",
        "\n"
      ],
      "metadata": {
        "id": "SJYzAsmj5mPa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### **4.2. The Trainer**\n",
        "\n",
        "Now we need to define the training class, i.e., the class that takes the generated data, and then it fits to it the LinearRegression model (i.e, estimates the optimal parameters of the linear regression). Let's call it **Trainer**, which has at least the following members:\n",
        "- Method **fit()**, which takes as input the model (LinearRegression in our case) and the data (the synthetic data we generated in our case), and computes the optimal parameters **$\\textbf{W}$** and **$b$** of the model."
      ],
      "metadata": {
        "id": "jqJ0KaY-7gz-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "class Trainer:\n",
        "  def __init__(self):\n",
        "    return\n",
        "\n",
        "  def fit(self, model, data):\n",
        "    # 2.1. Add 1 at the end of X\n",
        "    ones = torch.ones(1, data.n)     # a row of ones\n",
        "    X = torch.cat((data.X, ones), 0) # Append the columns of ones to the end of data.X. So I need to transpose it\n",
        "    # X now should be of size 2 x 10\n",
        "\n",
        "    # 2.2. The solution to the linear regression\n",
        "    A = torch.matmul(X, torch.transpose(X, 0, 1))\n",
        "    # A should be of size d x d. To check it, uncomment the following\n",
        "    print(A.size())\n",
        "\n",
        "    B = torch.matmul(torch.inverse(A), X)\n",
        "    print(B.size())   # size of B should be d x n\n",
        "\n",
        "    # The weights\n",
        "    w_estimated = torch.matmul(B, data.y)\n",
        "    model.w = w_estimated[0:-1]    # get all the elements except the last one\n",
        "    model.b = w_estimated[-1:]     # last element\n"
      ],
      "metadata": {
        "id": "5d_Ox3vE8b7N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### **4.3. The main code**\n",
        "\n",
        "Now, let's write the code of the main function:"
      ],
      "metadata": {
        "id": "YRAiwYYu9deV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 1. The data\n",
        "d = 1   # dim of the data\n",
        "w = torch.tensor([2.0])\n",
        "b = 4.2\n",
        "num_train = 10000000\n",
        "noise = 0 #1.2\n",
        "mu = 0\n",
        "sigma = 12\n",
        "\n",
        "data_generator = SyntheticRegressionData()\n",
        "data_generator.generate(w, b, mu=mu, sigma = sigma, noise = noise, num_train = num_train)\n",
        "\n",
        "print(\"The shape of the input data X and desired output y: \")\n",
        "print(\"Shape of X: \", data_generator.X.shape)\n",
        "print(\"Shape of y: \", data_generator.y.shape)\n",
        "\n",
        "\n",
        "# 2. The model (linear regression)\n",
        "model = LinearRegression(d)\n",
        "\n",
        "# 3. The trainer\n",
        "trainer = Trainer()\n",
        "\n",
        "# 4. Estimate the parameters\n",
        "trainer.fit(model, data_generator)\n",
        "\n",
        "# 5. Get the results\n",
        "w_star = model.w\n",
        "b_star = model.b\n",
        "\n",
        "# Let's see the estimated parameters\n",
        "print(\"Estimated W: \", w_star)\n",
        "print(\"Estimate b: \",  b_star)\n",
        "\n",
        "# real values\n",
        "print(\"Real W: \", w)\n",
        "print(\"Real b: \", b)"
      ],
      "metadata": {
        "id": "lkrOQL729lQd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "44ce063d-0558-44f9-8591-dc9c9fe9c3f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "The shape of the input data X and desired output y: \n",
            "Shape of X:  torch.Size([1, 10000000])\n",
            "Shape of y:  torch.Size([10000000, 1])\n",
            "torch.Size([2, 2])\n",
            "torch.Size([2, 10000000])\n",
            "Estimated W:  tensor([[2.0003]])\n",
            "Estimate b:  tensor([[4.2000]])\n",
            "Real W:  tensor([2.])\n",
            "Real b:  4.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Test the code above on multidimensional data (e.g., 2D or 3D)."
      ],
      "metadata": {
        "id": "2vmq48DqZWNl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### **5. Another problem**\n",
        "\n",
        "Suppose now that the problem we would like to solve is:\n",
        "$$\n",
        "y = \\sum_{i=1}^{d}w_ix_i^2 + b,\n",
        "$$\n",
        "where $x_i \\in \\mathbb{R}$, i.e., $x_i$'s are one-dimensinal scalars. How would you use the model you implemented above to solve this same problem with minimum extension?\n",
        "\n",
        "**Guide for the tutor:** This is similar to the regression problem above.\n",
        "- Given data $\\textbf{X}$, they just need to square them and use them in the code above - they do not need to adjust anything in the classes and in the methods of these classes."
      ],
      "metadata": {
        "id": "Pj7e5wRlZiAi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Step 1: True parameters for y = sum(w_i * x_i^2) + b\n",
        "w_true = torch.tensor([3.0, -1.0, 0.5])  # weights for x1^2, x2^2, x3^2\n",
        "b_true = 2.0\n",
        "num_train = 1000\n",
        "noise = 0.1\n",
        "\n",
        "# Step 2: Generate original data (linear input space)\n",
        "generator = SyntheticRegressionDataND()\n",
        "X_raw, _ = generator.generate(w=torch.ones_like(w_true), b=0.0, num_train=num_train)\n",
        "\n",
        "# Step 3: Apply nonlinear transform (x_i^2)\n",
        "X_squared = X_raw ** 2\n",
        "\n",
        "# Generate true target values: y = wᵗ(x²) + b + noise\n",
        "y = X_squared @ w_true.reshape(-1, 1) + b_true + noise * torch.randn(num_train, 1)\n",
        "\n",
        "# Step 4: Linear regression on transformed features\n",
        "X_aug = torch.cat((X_squared, torch.ones(num_train, 1)), dim=1)  # shape (n, d+1)\n",
        "\n",
        "A = X_aug.T @ X_aug\n",
        "B = X_aug.T @ y\n",
        "\n",
        "theta = torch.inverse(A) @ B  # [w1, w2, ..., b]\n",
        "w_est = theta[:-1].reshape(-1)\n",
        "b_est = theta[-1].item()\n",
        "\n",
        "# Step 5: Print results\n",
        "print(f\"Estimated w: {w_est}\")\n",
        "print(f\"Estimated b: {b_est:.4f}\")\n",
        "print(f\"True w:      {w_true}\")\n",
        "print(f\"True b:      {b_true}\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bpwepCOT7UJA",
        "outputId": "93952a26-d4dd-4b7a-8681-3a7e31ee9396"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Estimated w: tensor([ 2.9978, -0.9977,  0.4978])\n",
            "Estimated b: 2.0022\n",
            "True w:      tensor([ 3.0000, -1.0000,  0.5000])\n",
            "True b:      2.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###Summary\n",
        "\n",
        "| What Changed | Description |\n",
        "|--------------|-------------|\n",
        "| Inputs       | Squared each feature: `X_squared = X ** 2` |\n",
        "| Model        | No change — still used the existing linear regression solver |\n",
        "| Output       | Parameters \\( w_i \\) and \\( b \\) estimated accurately, even though the model is nonlinear in input |\n"
      ],
      "metadata": {
        "id": "Jhs-1dJF7hA5"
      }
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "gpuType": "T4"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.7"
    },
    "accelerator": "GPU"
  },
  "nbformat": 4,
  "nbformat_minor": 0
}